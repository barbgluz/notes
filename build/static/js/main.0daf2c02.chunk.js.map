{"version":3,"sources":["ui/Modal/Modal.module.css","containers/Auth/Auth.module.css","components/NotebookItem/NotebookItem.module.css","containers/Notebooks/Notebooks.module.css","components/Navbar/Navbar.module.css","components/NoteItem/NoteItem.module.css","containers/Notes/Note.module.css","containers/Layout/Layout.module.css","Api.js","store/actions/auth.js","store/actions/actionTypes.js","validation.js","containers/Auth/Login/Login.js","containers/Auth/Signup/Signup.js","ui/Spinner/Spinner.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","components/Navbar/Navbar.js","components/NotebookItem/NotebookItem.js","containers/Notebooks/Notebooks.js","store/actions/notebooks.js","components/Home/Home.js","ui/Modal/Modal.js","components/DeleteConfirmation/DeleteConfirmation.js","containers/Notes/Note.js","store/actions/note.js","components/NoteItem/NoteItem.js","containers/Notebooks/Notebook.js","store/actions/notebook.js","containers/Notes/New.js","containers/Notebooks/New.js","containers/Layout/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","store/reducers/notebooks.js","store/reducers/notebook.js","store/reducers/note.js","index.js"],"names":["module","exports","ModalContainer","Modal","Content","Title","Links","Link","Container","Box","FormContainer","ImgContainer","Login","Signup","Form","FormTitle","InputGroup","Btn","Footer","NotebookItem","Notes","Notebooks","Navbar","Logo","Navigation","Item","Line","Description","MainContent","API","axios","create","baseURL","headers","Content-Type","X-Requested-With","authSuccess","token","type","logout","localStorage","removeItem","empty","value","validEmail","test","String","toLowerCase","emailErrors","this","props","errors","email","map","error","index","react_default","a","createElement","key","className","classes","id","onChange","changed","required","htmlFor","password","onClick","submit","react_router_dom","to","Component","passwordErrors","passwordConfirm","name","spinner","Loader","Auth","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loginForm","invalid","signupForm","match","isValid","handleChange","bind","assertThisInitialized","handleSubmit","event","formName","target","form","objectSpread","setState","defineProperty","validate","push","valid","prop","length","undefined","onSignup","onAuth","preventDefault","validateForm","submitForm","Auth_Login_Login","Auth_Signup_Signup","loading","Spinner_Spinner","authRedirect","isAuthenticated","react_router","connect","auth","dispatch","authData","post","then","response","setItem","data","access_token","expires_at","catch","err","console","log","actions","signupData","password_confirmation","Logout","onLogout","sidebar","notebookItem","pathname","notebook_title","onGetNotebooks","notebooks","notebook","get","Authorization","home","Home","containers_Notebooks_Notebooks","modal","aria-modal","hideModal","style","transform","show","opacity","children","deleteConfirmation","delete","role","cancel","Note","showModal","submitted","deleteNote","onGetNote","params","onDeleteNote","note","title","notebook_id","location","DeleteConfirmation","styles","description","redirect","noteItem","time","date","split","Date","created","getMonth","getFullYear","Notebook","notebookTitle","deleteNotebook","onGetNotebook","onDeleteNotebook","_this2","notes","NoteItem","created_at","noteForm","descriptionValue","onUpdateNote","onNewNote","cols","rows","noteData","notebooks_id","put","NewNotebook","notebookForm","onUpdateNotebook","onNewNotebook","notebookData","Layout","onTryAutoSignup","view","path","exact","render","containers_Auth_Auth","component","NewNote","getItem","App","containers_Layout_Layout","Boolean","window","hostname","updateObject","oldObject","updatedProperties","initialState","reducer","arguments","action","authStart","authFail","authLogout","signupStart","signupSuccess","signupFail","notebooksStart","notebooksSuccess","notebooksFail","notebookStart","notebookSuccess","notebookFail","postNotebookStart","postNotebookSuccess","postNotebookFail","updateNotebookStart","updateNotebookSuccess","updateNotebookFail","noteStart","noteSuccess","noteFail","postNoteStart","postNoteSuccess","postNoteFail","updateNoteStart","updateNoteSuccess","updateNoteFail","removeNoteStart","removeNoteSuccess","removeNoteFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","notebooksReducer","notebookReducer","noteReducer","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,eAAA,8BAAAC,MAAA,qBAAAC,QAAA,uBAAAC,MAAA,qBAAAC,MAAA,qBAAAC,KAAA,wCCAlBP,EAAAC,QAAA,CAAkBO,UAAA,wBAAAC,IAAA,kBAAAC,cAAA,4BAAAC,aAAA,2BAAAC,MAAA,oBAAAC,OAAA,qBAAAC,KAAA,mBAAAC,UAAA,wBAAAC,WAAA,yBAAAC,IAAA,kBAAAC,OAAA,0CCAlBlB,EAAAC,QAAA,CAAkBkB,aAAA,mCAAAd,MAAA,4BAAAe,MAAA,iDCAlBpB,EAAAC,QAAA,CAAkBoB,UAAA,6BAAAhB,MAAA,8CCAlBL,EAAAC,QAAA,CAAkBqB,OAAA,uBAAAC,KAAA,qBAAAC,WAAA,2BAAAC,KAAA,0CCAlBzB,EAAAC,QAAA,CAAkBwB,KAAA,uBAAAC,KAAA,uBAAAC,YAAA,8BAAAtB,MAAA,wBAAAa,OAAA,mECAlBlB,EAAAC,QAAA,CAAkBG,QAAA,sBAAAuB,YAAA,4HCAlB3B,EAAAC,QAAA,CAAkBI,MAAA,sBAAAY,IAAA,oBAAAb,QAAA,wBAAAI,UAAA,0BAAAc,OAAA,uBAAAM,YAAA,4BAAAtB,MAAA,6KCSHuB,SARHC,EAAMC,OAAO,CACvBC,QAAS,4BACTC,QAAS,CACHC,eAAgB,mBAChBC,mBAAoB,oBCGfC,EAAc,SAACC,GAC1B,MAAO,CACLC,KCVwB,eDWxBD,MAAOA,IAWEE,EAAS,WAGpB,OAFAC,aAAaC,WAAW,SACxBD,aAAaC,WAAW,cACjB,CACLH,KCvBuB,wCCJdI,EAAQ,SAACC,GACpB,MAAiB,KAAVA,GAOIC,EAAa,SAACD,GAEzB,MADS,0JACCE,KAAKC,OAAOH,GAAOI,wCCoDhBnC,mLArDX,IAAIoC,EAAc,KAOlB,OANGC,KAAKC,MAAMC,OAAOC,QACnBJ,EAAcC,KAAKC,MAAMC,OAAOC,MAAMC,IAAI,SAACC,EAAOC,GAChD,OAAQC,EAAAC,EAAAC,cAAA,KAAGC,IAAKJ,GAAR,IAAiBD,EAAjB,QAKVE,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQjD,OACtB4C,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAQ9C,WAAvB,SAEAyC,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAQ/C,KAAMgD,GAAG,aAChCN,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ7C,WAAa,eACnCwC,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,OACLwB,GAAG,QACHC,SAAUd,KAAKC,MAAMc,QACrBC,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,SAAjC,UAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZZ,GAGHQ,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ7C,WAAa,eACnCwC,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,WACLwB,GAAG,WACHC,SAAUd,KAAKC,MAAMc,QACrBC,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,YAAjC,aAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAIT,KAAKC,MAAMC,OAAOgB,WAGxBX,EAAAC,EAAAC,cAAA,UACEE,UAAWC,IAAQ5C,IAAM,OACzBmD,QAASnB,KAAKC,MAAMmB,QAFtB,UAKFb,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ3C,QACtBsC,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,WAAT,WAArB,cAjDUC,aC2FL3D,mLAxFX,IAAImC,EAAc,KACfC,KAAKC,MAAMC,OAAOC,QACnBJ,EAAcC,KAAKC,MAAMC,OAAOC,MAAMC,IAAI,SAACC,EAAOC,GAChD,OAAQC,EAAAC,EAAAC,cAAA,KAAGC,IAAKJ,GAAR,IAAiBD,EAAjB,QAIZ,IAAImB,EAAiB,KAOrB,OANGxB,KAAKC,MAAMC,OAAOuB,kBACnBD,EAAiBxB,KAAKC,MAAMC,OAAOuB,gBAAgBrB,IAAI,SAACC,EAAOC,GAC7D,OAAQC,EAAAC,EAAAC,cAAA,KAAGC,IAAKJ,GAAR,IAAiBD,EAAjB,QAKVE,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQhD,QACtB2C,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAQ9C,WAAvB,UAEAyC,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAQ/C,KAAMgD,GAAG,cAChCN,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ7C,WAAa,eACnCwC,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,OACLwB,GAAG,OACHC,SAAUd,KAAKC,MAAMc,QACrBC,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,QAAjC,SAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAIT,KAAKC,MAAMC,OAAOwB,OAGxBnB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ7C,WAAa,eACnCwC,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,OACLwB,GAAG,QACHC,SAAUd,KAAKC,MAAMc,QACrBC,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,SAAjC,UAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZZ,GAGHQ,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ7C,WAAa,eACnCwC,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,WACLwB,GAAG,WACHC,SAAUd,KAAKC,MAAMc,QACrBC,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,YAAjC,aAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAIT,KAAKC,MAAMC,OAAOgB,WAGxBX,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ7C,WAAa,eACnCwC,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,WACLwB,GAAG,kBACHC,SAAUd,KAAKC,MAAMc,QACrBC,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,mBAAjC,qBAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACZa,GAGHjB,EAAAC,EAAAC,cAAA,UACEE,UAAWC,IAAQ5C,IAAM,OACzBmD,QAASnB,KAAKC,MAAMmB,QAFtB,WAKFb,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ3C,QACtBsC,EAAAC,EAAAC,cAAA,8BAAqBF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,KAAT,UAArB,cApFWC,8BCENI,EAJC,kBACdpB,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQgB,QAAxB,eCOIC,cAEJ,SAAAA,EAAY5B,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA6B,IACjBC,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnC,KAAMC,KAEDmC,MAAQ,CACXC,UAAW,CACTlC,MAAO,CACLT,MAAO,GACPQ,OAAQ,CACNc,SAAU,oBACVsB,QAAS,qBAGbpB,SAAU,CACRxB,MAAO,GACPQ,OAAQ,CACNc,SAAU,0BAIhBuB,WAAY,CACVb,KAAM,CACJhC,MAAO,GACPQ,OAAQ,CACNc,SAAU,qBAGdb,MAAO,CACLT,MAAO,GACPQ,OAAQ,CACNc,SAAU,oBACVsB,QAAS,qBAGbpB,SAAU,CACRxB,MAAO,GACPQ,OAAQ,CACNc,SAAU,yBAGdS,gBAAiB,CACf/B,MAAO,GACPQ,OAAQ,CACNc,SAAU,+BACVwB,MAAO,4BAIbtC,OAAQ,CACNwB,KAAM,GACNvB,MAAO,GACPe,SAAU,GACVO,gBAAiB,IAEnBgB,SAAS,GAGXX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IAzDHA,4EA4DNgB,GACX,IAAIC,EAAWD,EAAME,OAAOC,KAAKpC,GAC7BoC,EAAIlB,OAAAmB,EAAA,EAAAnB,CAAA,GAAO/B,KAAKoC,MAAMW,IAG1BE,EAFUH,EAAME,OAAOnC,IAEbnB,MAAQoD,EAAME,OAAOtD,MAE/BM,KAAKmD,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GAAiBgB,EAAWE,yCAGjBF,GACX,IACI7C,EJlFcgB,EAAUO,EIiFxBwB,EAAOjD,KAAKoC,MAAMW,GAGN,eAAbA,GACD7C,EAAS,CACPwB,KAAM,GACNvB,MAAO,GACPe,SAAU,GACVO,gBAAiB,IAGhB4B,EAAeJ,EAAKvB,KAAKhC,QAAQQ,EAAOwB,KAAK4B,KAAKL,EAAKvB,KAAKxB,OAAOc,UACnEqC,EAAeJ,EAAK9C,MAAMT,QAAQQ,EAAOC,MAAMmD,KAAKL,EAAK9C,MAAMD,OAAOc,UACrEqC,EAAoBJ,EAAK9C,MAAMT,QAAQQ,EAAOC,MAAMmD,KAAKL,EAAK9C,MAAMD,OAAOoC,SAC5Ee,EAAeJ,EAAK/B,SAASxB,QAAQQ,EAAOgB,SAASoC,KAAKL,EAAK/B,SAAShB,OAAOc,UAC/EqC,EAAeJ,EAAKxB,gBAAgB/B,QAAQQ,EAAOuB,gBAAgB6B,KAAKL,EAAKxB,gBAAgBvB,OAAOc,UJhGvFE,EIiGG+B,EAAK/B,SAASxB,MJjGP+B,EIiGcwB,EAAKxB,gBAAgB/B,MJhG1DwB,IAAaO,GIgGqDvB,EAAOuB,gBAAgB6B,KAAKL,EAAKxB,gBAAgBvB,OAAOsC,QAExG,cAAbO,IACR7C,EAAS,CACPC,MAAO,GACPe,SAAU,IAGTmC,EAAeJ,EAAK9C,MAAMT,QAAQQ,EAAOC,MAAMmD,KAAKL,EAAK9C,MAAMD,OAAOc,UACrEqC,EAAoBJ,EAAK9C,MAAMT,QAAQQ,EAAOC,MAAMmD,KAAKL,EAAK9C,MAAMD,OAAOoC,SAC5Ee,EAAeJ,EAAK/B,SAASxB,QAAQQ,EAAOgB,SAASoC,KAAKL,EAAK/B,SAAShB,OAAOc,WAIpF,IAAIuC,GAAQ,EACZ,IAAI,IAAIC,KAAQtD,EACa,IAAxBA,EAAOsD,GAAMC,aAAoCC,IAApBxD,EAAOsD,GAAM,KAC3CD,GAAQ,GAIZvD,KAAKmD,SAAS,CAACV,QAASc,IACxBvD,KAAKmD,SAAS,CAACjD,OAAQA,uCAId6C,GACO,eAAbA,GACD/C,KAAKC,MAAM0D,SAAS3D,KAAKoC,MAAMG,WAAWb,KAAKhC,MAC7CM,KAAKoC,MAAMG,WAAWpC,MAAMT,MAC5BM,KAAKoC,MAAMG,WAAWrB,SAASxB,MAC/BM,KAAKoC,MAAMG,WAAWd,gBAAgB/B,OACxCM,KAAKC,MAAM2D,OAAO5D,KAAKoC,MAAMG,WAAWpC,MAAMT,MAAOM,KAAKoC,MAAMG,WAAWrB,SAASxB,QAC/D,cAAbqD,GACR/C,KAAKC,MAAM2D,OAAO5D,KAAKoC,MAAMC,UAAUlC,MAAMT,MAAOM,KAAKoC,MAAMC,UAAUnB,SAASxB,4CAIzEoD,GACXA,EAAMe,iBACN,IAAIZ,EAAOH,EAAME,OAAOC,KAAKpC,GAE7Bb,KAAK8D,aAAab,GAEfjD,KAAKoC,MAAMK,SACZzC,KAAK+D,WAAWd,oCAKlB,IAAIA,EAAQ1C,EAAAC,EAAAC,cAACuD,EAAD,CACVjD,QAASf,KAAK0C,aACdxC,OAAQF,KAAKoC,MAAMlC,OACnBkB,OAAQpB,KAAK6C,eAEQ,WAApB7C,KAAKC,MAAMgD,OACZA,EAAQ1C,EAAAC,EAAAC,cAACwD,EAAD,CACNlD,QAASf,KAAK0C,aACdxC,OAAQF,KAAKoC,MAAMlC,OACnBkB,OAAQpB,KAAK6C,gBAGd7C,KAAKC,MAAMiE,UACZjB,EAAO1C,EAAAC,EAAAC,cAAC0D,EAAD,OAGT,IAAIC,EAAe,KAKnB,OAJGpE,KAAKC,MAAMoE,kBACZD,EAAe7D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUhD,GAAG,OAI5Bf,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQrD,WACtBgD,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQpD,KACtB+C,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQlD,eAExB6C,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQnD,eACrB2G,EACAnB,YAvKM1B,aA6LJgD,cAPS,SAAAnC,GACtB,MAAO,CACLiC,gBAAsC,OAArBjC,EAAMoC,KAAKpF,MAC5B8E,QAAS9B,EAAMoC,KAAKN,UAVG,SAAAO,GACzB,MAAO,CACLb,OAAQ,SAACzD,EAAOe,GAAR,OAAqBuD,EN9Jb,SAACtE,EAAOe,GAC1B,OAAO,SAAAuD,GACLA,EA7BK,CACLpF,KCLsB,eDmCtB,IAAMqF,EAAW,CACfvE,MAAOA,EACPe,SAAUA,GAGZtC,EAAI+F,KAAK,SAAUD,GAChBE,KAAM,SAAAC,GACLtF,aAAauF,QAAQ,QAASD,EAASE,KAAKC,cAC5CzF,aAAauF,QAAQ,aAAcD,EAASE,KAAKE,YACjDR,EAAStF,EAAY0F,EAASE,KAAKC,iBAEpCE,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EA/BC,CACLpF,KChBqB,YDiBrBgB,MA6BsB8E,OM6IgBG,CAAanF,EAAOe,KAC1DyC,SAAU,SAACjC,EAAMvB,EAAOe,EAAUO,GAAxB,OAA4CgD,ENtHpC,SAAC/C,EAAMvB,EAAOe,EAAUO,GAC5C,OAAO,SAAAgD,GACLA,EApBK,CACLpF,KCjDwB,iBDsExB,IAAMkG,EAAa,CACjB7D,KAAMA,EACNvB,MAAOA,EACPe,SAAUA,EACVsE,sBAAuB/D,GAGzB7C,EAAI+F,KAAK,UAAWY,GACjBX,KAAM,SAAAC,GACLJ,EAzBC,CACLpF,KCtD0B,qBDgFvB6F,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EAvBC,CACLpF,KC3DuB,cD4DvBgB,MAqBwB8E,OMqGuCG,CAAe5D,EAAMvB,EAAOe,EAAUO,OAW1F8C,CAA6C1C,GCnMtD4D,8LAEFzF,KAAKC,MAAMyF,4CAIX,OAAOnF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUhD,GAAG,aANHC,aAgBNgD,cAAQ,KANI,SAAAE,GACzB,MAAO,CACLiB,SAAU,kBAAMjB,EAASa,QAIdf,CAAkCkB,oBCClCE,EAlBC,SAAC1F,GAEf,OACEM,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQvC,QACtBkC,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQtC,MACtBiC,EAAAC,EAAAC,cAAA,sBAGFF,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQrC,YACtBgC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAQpC,MAAM+B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,KAAT,WAC7Bf,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAQpC,MAAM+B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,WAAT,kCCGxBsE,EAdM,SAAC3F,GAEpB,OACEM,EAAAC,EAAAC,cAACY,EAAA,EAAD,CACEC,GAAI,CACFuE,SAAW,aAAe5F,EAAMY,GAChCuB,MAAO,CAAC0D,eAAgB7F,EAAM6F,iBAEhCnF,UAAWC,IAAQ1C,cACnBqC,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAQxD,OAAQ6C,EAAM6F,mCCNrC1H,8LAGF4B,KAAKC,MAAM8F,eAAe/F,KAAKC,MAAMb,OACrCY,KAAKmD,SAAS,CAAC6C,UAAWhG,KAAKC,MAAM+F,6CAKrC,IAAIA,EAAY,KAUhB,OARGhG,KAAKC,MAAM+F,YACZA,EAAYhG,KAAKC,MAAM+F,UAAU5F,IAAI,SAAA6F,GACnC,OACE1F,EAAAC,EAAAC,cAACvC,EAAD,CAAc4H,eAAgBG,EAASvE,KAAMhB,IAAKuF,EAASpF,GAAIA,GAAIoF,EAASpF,QAMhFN,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxC,WACrB4H,UArBezE,aAwCTgD,cAbS,SAAAnC,GACtB,MAAO,CACL4D,UAAW5D,EAAM4D,UAAUA,UAC3B5G,MAAOgD,EAAMoC,KAAKpF,QAIK,SAAAqF,GACzB,MAAO,CACLsB,eAAgB,SAAC3G,GAAD,OAAWqF,ECrBN,SAACrF,GACxB,OAAO,SAAAqF,GACLA,EArBK,CACLpF,KVKiC,0BUiBjCT,EAAIsH,IAAI,aAAc,CACpBlH,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EAvBC,CACLpF,KVAmC,0BUCnC2G,UAqB8BnB,EAASE,KAAKA,SAEzCG,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EApBC,CACLpF,KVNgC,uBUOhCgB,MAkB2B8E,ODOSG,CAAkBlG,OAI3CmF,CAA6CnG,mBEtB7CgI,EAnBF,SAACnG,GAEZ,OACEM,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQyF,MACtB9F,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxD,OACtBmD,EAAAC,EAAAC,cAAA,kBAEAF,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,gBACPf,EAAAC,EAAAC,cAAA,UAAQE,UAAWC,IAAQ5C,KAA3B,kBAIJuC,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQzD,SACtBoD,EAAAC,EAAAC,cAAC6F,EAAD,0BCKOC,EArBD,SAACtG,GAAD,OACZM,EAAAC,EAAAC,cAAA,OAAK+F,aAAW,QACdjG,EAAAC,EAAAC,cAAA,OACEE,UAAWC,IAAQ3D,eACnBkE,QAASlB,EAAMwG,UACfC,MAAO,CACPC,UAAW1G,EAAM2G,KAAM,gBAAkB,wBAG3CrG,EAAAC,EAAAC,cAAA,OACEE,UAAWC,IAAQ1D,MACnBwJ,MAAO,CACPC,UAAW1G,EAAM2G,KAAM,gBAAkB,qBACzCC,QAAS5G,EAAM2G,KAAM,IAAM,MAG1B3G,EAAM6G,YCHEC,EAbY,SAAC9G,GAAD,OACzBM,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQzD,SACtBoD,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxD,OACtBmD,EAAAC,EAAAC,cAAA,4BAGFF,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQvD,OACtBkD,EAAAC,EAAAC,cAAA,KAAGU,QAASlB,EAAM+G,OAAQrG,UAAWC,IAAQtD,KAAM2J,KAAK,QAAxD,OACA1G,EAAAC,EAAAC,cAAA,KAAGU,QAASlB,EAAMiH,OAAQvG,UAAWC,IAAQtD,KAAM2J,KAAK,QAAxD,0BCDAE,eAEJ,SAAAA,EAAYlH,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAmH,IACjBrF,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAoF,GAAAhF,KAAAnC,KAAMC,KAsBRmH,UAAY,WACVtF,EAAKqB,SAAS,CAACiE,WAAW,KAxBTtF,EA2BnB2E,UAAY,WACV3E,EAAKqB,SAAS,CAACiE,WAAW,KAzB1BtF,EAAKM,MAAQ,CACXiF,WAAW,EACXD,WAAW,GAGbtF,EAAKwF,WAAaxF,EAAKwF,WAAW3E,KAAhBZ,OAAAa,EAAA,EAAAb,CAAAD,IARDA,mFAYjB9B,KAAKC,MAAMsH,UAAUvH,KAAKC,MAAMb,MAAOY,KAAKC,MAAMuC,MAAMgF,OAAO3G,yCAI/Db,KAAKC,MAAMwH,aAAazH,KAAKC,MAAMb,MAAOY,KAAKC,MAAMuC,MAAMgF,OAAO3G,IAE/Db,KAAKC,MAAMoH,WACZrH,KAAKmD,SAAS,CAACkE,WAAW,qCAc5B,IAAIK,EAAO,KAER1H,KAAKC,MAAMyH,OACZA,EACEnH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxD,OACtBmD,EAAAC,EAAAC,cAAA,UAAKT,KAAKC,MAAMyH,KAAKC,OAErBpH,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQvD,OACxBkD,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAI,CACAuE,SAAW7F,KAAKC,MAAMuC,MAAMgF,OAAO3G,GAAK,QACxCuB,MAAO,CAAEwF,YAAa5H,KAAKC,MAAM4H,SAASzF,MAAMwF,YACvCD,MAAO3H,KAAKC,MAAM4H,SAASzF,MAAMuF,MACjC7B,eAAgB9F,KAAKC,MAAM4H,SAASzF,MAAM0D,eAC1C4B,KAAM1H,KAAKC,MAAMyH,QAElCnH,EAAAC,EAAAC,cAAA,UAAQE,UAAWC,IAAQ5C,KAA3B,SAGFuC,EAAAC,EAAAC,cAAA,UACEU,QAASnB,KAAKoH,WADhB,WAIF7G,EAAAC,EAAAC,cAACvD,EAAD,CAAO0J,KAAM5G,KAAKoC,MAAMgF,UAAWX,UAAWzG,KAAKyG,WACjDlG,EAAAC,EAAAC,cAACqH,EAAD,CACEd,OAAQhH,KAAKsH,WACbJ,OAAQlH,KAAKyG,cAMjBlG,EAAAC,EAAAC,cAAA,OAAKE,UAAWoH,IAAO5K,SACrBoD,EAAAC,EAAAC,cAAA,OAAKE,UAAWoH,IAAOrJ,aACrB6B,EAAAC,EAAAC,cAAA,SAAIT,KAAKC,MAAMyH,KAAKM,iBAO9B,IAAIC,EAAW1H,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUhD,GAAG,MAK5B,OAJItB,KAAKoC,MAAMiF,YACbY,EAAW,MAIX1H,EAAAC,EAAAC,cAAA,WACGwH,EACAP,UApFUnG,aAyGJgD,eAfS,SAAAnC,GACtB,MAAO,CACLsF,KAAMtF,EAAMsF,KAAKA,KACjBtI,MAAOgD,EAAMoC,KAAKpF,MAClBiI,UAAWjF,EAAMsF,KAAKL,YAIC,SAAA5C,GACzB,MAAO,CACL8C,UAAW,SAACnI,EAAOyB,GAAR,OAAe4D,EC7BV,SAACrF,EAAOyB,GAC1B,OAAO,SAAA4D,GACLA,EAhFK,CACLpF,KfyB4B,qBewD5BT,EAAIsH,IAAK,UAAYrF,EAAK,CACxB7B,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EAlFC,CACLpF,KfoB8B,qBenB9BqI,KAgFyB7C,EAASE,KAAKA,SAEpCG,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EA/EC,CACLpF,Kfc2B,kBeb3BgB,MA6EsB8E,ODeaG,CAAalG,EAAOyB,KACvD4G,aAAc,SAACrI,EAAOyB,GAAR,OAAe4D,ECuCX,SAAC5D,EAAIzB,GACzB,OAAO,SAAAqF,GACLA,EA1FK,CACLpF,Kf1B6B,sBeqH7BT,EAAIoI,OAAQ,UAAYnG,EAAK,CAC3B7B,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EA3FC,CACLpF,Kf5B+B,0BewH5B6F,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EAzFC,CACLpF,KfjC4B,mBekC5BgB,MAuF4B8E,ODrDUG,CAAezE,EAAIzB,OAI9CmF,CAA6C4C,wBEtF7Ce,GAxBE,SAACjI,GAChB,IACIkI,EAAOlI,EAAMmI,KAAKC,MAAM,KAAK,GAC7BD,EAAO,IAAIE,KAAKH,GAChBI,EAHS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,MAAO,MAAO,OAGvEH,EAAKI,YAAc,KAAOJ,EAAKK,cAEpD,OACElI,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQ1C,aAAe,IAAM6J,KAAOvJ,MAClD+B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAI,CACAuE,SAAS,SAAW5F,EAAMY,GAC1BuB,MAAO,CAAEwF,YAAa3H,EAAM2H,YACnB9B,eAAgB7F,EAAM6F,kBAEvCvF,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,IAAQxD,MAAQ,IAAM2K,KAAO3K,OAAS6C,EAAM0H,QAE7DpH,EAAAC,EAAAC,cAAA,MAAIE,UAAWoH,KAAOtJ,OACtB8B,EAAAC,EAAAC,cAAA,KAAGE,UAAWC,IAAQzC,MAAQ,IAAM4J,KAAOrJ,aAAcuB,EAAM+H,aAC/DzH,EAAAC,EAAAC,cAAA,OAAKE,UAAWoH,KAAO9J,QACrBsC,EAAAC,EAAAC,cAAA,SAAI8H,MCZNG,eAEJ,SAAAA,EAAYzI,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA0I,IACjB5G,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAA2G,GAAAvG,KAAAnC,KAAMC,KAyBRmH,UAAY,WACVtF,EAAKqB,SAAS,CAACiE,WAAW,KA3BTtF,EA8BnB2E,UAAY,WACV3E,EAAKqB,SAAS,CAACiE,WAAW,KA5B1BtF,EAAKM,MAAQ,CACXvB,GAAIiB,EAAK7B,MAAMuC,MAAMgF,OAAO3G,GAC5B8H,cAAe7G,EAAK7B,MAAM4H,SAASzF,MAAM0D,eACzCuB,WAAW,EACXD,WAAW,GAIbtF,EAAK8G,eAAiB9G,EAAK8G,eAAejG,KAApBZ,OAAAa,EAAA,EAAAb,CAAAD,IAXLA,mFAejB9B,KAAKC,MAAM4I,cAAc7I,KAAKC,MAAMb,MAAOY,KAAKC,MAAMuC,MAAMgF,OAAO3G,6CAInEb,KAAKC,MAAM6I,iBAAiB9I,KAAKC,MAAMb,MAAOY,KAAKC,MAAMuC,MAAMgF,OAAO3G,IAEnEb,KAAKC,MAAMoH,WACZrH,KAAKmD,SAAS,CAACkE,WAAW,qCAYrB,IAAA0B,EAAA/I,KAEHgJ,EAAQ,KAEThJ,KAAKC,MAAMgG,WACZ+C,EAAQhJ,KAAKC,MAAMgG,SAAS7F,IAAI,SAAA6F,GAC9B,OACE1F,EAAAC,EAAAC,cAACwI,GAAD,CACEtB,MAAO1B,EAAS0B,MAChBjH,IAAKuF,EAASpF,GACdmH,YAAa/B,EAAS+B,YACtBI,KAAMnC,EAASiD,WACftB,YAAamB,EAAK3G,MAAMvB,GACxBiF,eAAgBiD,EAAK3G,MAAMuG,cAC3B9H,GAAIoF,EAASpF,QAKrB,IAAIoH,EAAW1H,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUhD,GAAG,MAK5B,OAJItB,KAAKoC,MAAMiF,YACbY,EAAW,MAIX1H,EAAAC,EAAAC,cAAA,WACGwH,EACD1H,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxD,MAAQ,IAAM2K,IAAO3K,OAC3CmD,EAAAC,EAAAC,cAAA,UAAKT,KAAKoC,MAAMuG,eAEhBpI,EAAAC,EAAAC,cAAA,OAAKE,UAAWoH,IAAO1K,OACrBkD,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAI,CACRuE,SAAU,YACVzD,MAAO,CAACwF,YAAa5H,KAAKoC,MAAMvB,GAChCiF,eAAgB9F,KAAKC,MAAM4H,SAASzF,MAAM0D,kBAG1CvF,EAAAC,EAAAC,cAAA,UAAQE,UAAWoH,IAAO/J,KAA1B,aAGFuC,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAI,CACRuE,SAAW7F,KAAKC,MAAMuC,MAAMgF,OAAO3G,GAAK,QACxCuB,MAAO,CAACwF,YAAa5H,KAAKoC,MAAMvB,GAChC8G,MAAO3H,KAAKoC,MAAMuG,iBAElBpI,EAAAC,EAAAC,cAAA,UAAQE,UAAWC,IAAQ5C,KAA3B,SAGFuC,EAAAC,EAAAC,cAAA,UACEE,UAAWC,IAAQ5C,IACnBmD,QAASnB,KAAKoH,WAFhB,WAKF7G,EAAAC,EAAAC,cAACvD,EAAD,CAAO0J,KAAM5G,KAAKoC,MAAMgF,UAAWX,UAAWzG,KAAKyG,WACjDlG,EAAAC,EAAAC,cAACqH,EAAD,CACEd,OAAQhH,KAAK4I,eACb1B,OAAQlH,KAAKyG,cAMnBlG,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxC,WACrB4K,WAnGYzH,aAyHRgD,eAfS,SAAAnC,GACtB,MAAO,CACL6D,SAAU7D,EAAM6D,SAAS+C,MACzB5J,MAAOgD,EAAMoC,KAAKpF,MAClBiI,UAAWjF,EAAMsF,KAAKL,YAIC,SAAA5C,GACzB,MAAO,CACLoE,cAAe,SAACzJ,EAAOyB,GAAR,OAAe4D,EC7CV,SAACrF,EAAOyB,GAC9B,OAAO,SAAA4D,GACLA,EAjFK,CACLpF,KlBSgC,yBkByEhCT,EAAIsH,IAAK,aAAerF,EAAK,CAC3B7B,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EAnFC,CACLpF,KlBIkC,yBkBHlC4G,SAiF6BpB,EAASE,KAAKA,SAExCG,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EAhFC,CACLpF,KlBF+B,sBkBG/BgB,MA8E0B8E,OD+BaG,CAAiBlG,EAAOyB,KAC/DiI,iBAAkB,SAAC1J,EAAOyB,GAAR,OAAe4D,ECmBP,SAAC5D,EAAIzB,GACjC,OAAO,SAAAqF,GACLA,EAvFK,CACLpF,KlBtB6B,sBkB8G7BT,EAAIoI,OAAQ,cAAgBnG,EAAK,CAC/B7B,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EAxFC,CACLpF,KlB5B+B,0BkBqH5B6F,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EAtFC,CACLpF,KlBjC4B,mBkBkC5BgB,MAoFgC8E,ODjCUG,CAAuBzE,EAAIzB,OAI1DmF,CAA6CmE,IE5HtDvB,eAEJ,SAAAA,EAAYlH,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAAmH,IACjBrF,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAAoF,GAAAhF,KAAAnC,KAAMC,KAEDmC,MAAQ,CACX+G,SAAU,CACRxB,MAAO,CACLjI,MAAO,GACPQ,OAAQ,CACNc,SAAU,sBAGdgH,YAAa,CACXtI,MAAO,IAETkI,YAAa9F,EAAK7B,MAAM4H,SAASzF,MAAMwF,YACvC/G,GAAI,MAENwG,WAAW,EACXnH,OAAQ,CACNyH,MAAO,IAETlF,SAAS,GAIXX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IA1BHA,mFA+BjB,GAAG9B,KAAKC,MAAM4H,SAASzF,MAAMsF,KAAM,CACjC,IAAI0B,EAAoBpJ,KAAKC,MAAM4H,SAASzF,MAAMsF,KAAKM,YAAchI,KAAKC,MAAM4H,SAASzF,MAAMsF,KAAKM,YAAc,GAE9GN,EAAO,CACXC,MAAO,CACHjI,MAAOM,KAAKC,MAAM4H,SAASzF,MAAMsF,KAAKC,MACtCzH,OAAQ,CACNc,SAAU,sBAGdgH,YAAa,CACXtI,MAAO0J,GAETxB,YAAa5H,KAAKC,MAAM4H,SAASzF,MAAMwF,YACvC/G,GAAIb,KAAKC,MAAM4H,SAASzF,MAAMsF,KAAK7G,IAErCb,KAAKmD,SAAS,CAACgG,SAAUzB,4CAM3B,IACIxH,EADA+C,EAAOjD,KAAKoC,MAAM+G,SAGtBjJ,EAAS,CACPyH,MAAO,IAGNtE,EAAeJ,EAAK0E,MAAMjI,QAAQQ,EAAOyH,MAAMrE,KAAKL,EAAK0E,MAAMzH,OAAOc,UAEzE,IAAIuC,GAAQ,EACZ,IAAI,IAAIC,KAAQtD,EACa,IAAxBA,EAAOsD,GAAMC,aAAoCC,IAApBxD,EAAOsD,GAAM,KAC3CD,GAAQ,GAIZvD,KAAKmD,SAAS,CAACV,QAASc,IACxBvD,KAAKmD,SAAS,CAACjD,OAAQA,yCAGZ4C,GACXA,EAAMe,iBAEN7D,KAAK8D,eAEF9D,KAAKoC,MAAMK,UACRzC,KAAKoC,MAAM+G,SAAStI,GAMtBb,KAAKC,MAAMoJ,aAAarJ,KAAKoC,MAAM+G,SAAStI,GAC1Cb,KAAKoC,MAAM+G,SAASxB,MAAMjI,MAC1BM,KAAKoC,MAAM+G,SAASnB,YAAYtI,MAChCM,KAAKoC,MAAM+G,SAASvB,YACpB5H,KAAKC,MAAMb,OATbY,KAAKC,MAAMqJ,UAAUtJ,KAAKoC,MAAM+G,SAASxB,MAAMjI,MAC7CM,KAAKoC,MAAM+G,SAASnB,YAAYtI,MAChCM,KAAKoC,MAAM+G,SAASvB,YACpB5H,KAAKC,MAAMb,OAQZY,KAAKC,MAAMoH,WACZrH,KAAKmD,SAAS,CAACkE,WAAW,0CAMnBvE,GACX,IAAIpC,EAAMoC,EAAME,OAAOnC,GACnBoC,EAAIlB,OAAAmB,EAAA,EAAAnB,CAAA,GAAO/B,KAAKoC,MAAM+G,UAE1BlG,EAAKvC,GAAKhB,MAAQoD,EAAME,OAAOtD,MAE/BM,KAAKmD,SAAS,CAACgG,SAAUlG,qCAIzB,IAAIgF,EAAW1H,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CACbhD,GAAI,CAACuE,SAAU,aAAe7F,KAAKC,MAAM4H,SAASzF,MAAMwF,YACxDxF,MAAO,CAAC0D,eAAgB9F,KAAKC,MAAM4H,SAASzF,MAAM0D,mBAMxD,OAJQ9F,KAAKoC,MAAMiF,YACbY,EAAW,MAIf1H,EAAAC,EAAAC,cAAA,WACGwH,EACD1H,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxD,OACtBmD,EAAAC,EAAAC,cAAA,mBAGFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,OACLwB,GAAG,QACHC,SAAUd,KAAK0C,aACfhD,MAAOM,KAAKoC,MAAM+G,SAASxB,MAAMjI,MACjCsB,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,eAAjC,UAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAIT,KAAKoC,MAAMlC,OAAOyH,QAIxBpH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,YACEE,UAAU,WACVE,GAAG,cACHa,KAAK,cACLZ,SAAUd,KAAK0C,aACf6G,KAAK,KAAKC,KAAK,KACf9J,MAAOM,KAAKoC,MAAM+G,SAASnB,YAAYtI,MACvCsB,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,eAAjC,gBAGFV,EAAAC,EAAAC,cAAA,UACEE,UAAU,MACVQ,QAASnB,KAAK6C,cAFhB,kBA3JWtB,aAoLJgD,eAdS,SAAAnC,GACtB,MAAO,CACLhD,MAAOgD,EAAMoC,KAAKpF,MAClBiI,UAAWjF,EAAMsF,OAIM,SAAAjD,GACzB,MAAO,CACL6E,UAAW,SAAC3B,EAAOK,EAAaJ,EAAaxI,GAAlC,OAA4CqF,EJnFvC,SAACkD,EAAOK,EAAaJ,EAAaxI,GACpD,OAAO,SAAAqF,GACLA,EA/EK,CACLpF,KfS2B,oBeuE3B,IAAMoK,EAAW,CACf9B,MAAOA,EACPK,YAAaA,EACb0B,aAAc9B,GAGhBhJ,EAAI+F,KAAK,SAAU8E,EAAU,CAC3BzK,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EAvFC,CACLpF,KfI6B,wBeoF1B6F,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EArFC,CACLpF,KfD0B,iBeE1BgB,MAmF0B8E,OI+DsCG,CAAaqC,EAAOK,EAAaJ,EAAaxI,KAC9GiK,aAAc,SAACxI,EAAI8G,EAAOK,EAAaJ,EAAaxI,GAAtC,OAAgDqF,EJ3D5C,SAAC5D,EAAI8G,EAAOK,EAAaJ,EAAaxI,GAC1D,OAAO,SAAAqF,GACLA,EArFK,CACLpF,KfN6B,sBe4F7B,IAAMoK,EAAW,CACf9B,MAAOA,EACPK,YAAaA,EACb0B,aAAc9B,GAGhBhJ,EAAI+K,IAAK,UAAY9I,EAAK4I,EAAU,CAClCzK,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EA5FC,CACLpF,KfZ+B,0BeyG5B6F,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EA1FC,CACLpF,KfjB4B,mBekB5BgB,MAwF4B8E,OIuC2CG,CAAezE,EAAI8G,EAAOK,EAAaJ,EAAaxI,OAIhHmF,CAA6C4C,ICpLtDyC,eAEJ,SAAAA,EAAY3J,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA/B,KAAA4J,IACjB9H,EAAAC,OAAAE,EAAA,EAAAF,CAAA/B,KAAA+B,OAAAG,EAAA,EAAAH,CAAA6H,GAAAzH,KAAAnC,KAAMC,KAEDmC,MAAQ,CACXyH,aAAc,CACZlC,MAAO,CACLjI,MAAO,GACPQ,OAAQ,CACNc,SAAU,+BAGdH,GAAI,MAENwG,WAAW,EACXnH,OAAQ,CACNyH,MAAO,IAETlF,SAAS,GAGXX,EAAKY,aAAeZ,EAAKY,aAAaC,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IACpBA,EAAKe,aAAef,EAAKe,aAAaF,KAAlBZ,OAAAa,EAAA,EAAAb,CAAAD,IArBHA,mFA0BjB,GAAG9B,KAAKC,MAAM4H,SAASzF,MAAO,CAC5B,IAAI6D,EAAW,CACb0B,MAAO,CACLjI,MAAOM,KAAKC,MAAM4H,SAASzF,MAAMuF,MACjCzH,OAAQ,CACNc,SAAU,+BAGdH,GAAIb,KAAKC,MAAM4H,SAASzF,MAAMwF,aAGhC5H,KAAKmD,SAAS,CAAC0G,aAAc5D,4CAM/B,IACI/F,EADA+C,EAAOjD,KAAKoC,MAAMyH,aAGtB3J,EAAS,CACPyH,MAAO,IAGNtE,EAAeJ,EAAK0E,MAAMjI,QAAQQ,EAAOyH,MAAMrE,KAAKL,EAAK0E,MAAMzH,OAAOc,UAEzE,IAAIuC,GAAQ,EACZ,IAAI,IAAIC,KAAQtD,EACa,IAAxBA,EAAOsD,GAAMC,aAAoCC,IAApBxD,EAAOsD,GAAM,KAC3CD,GAAQ,GAIZvD,KAAKmD,SAAS,CAACV,QAASc,IACxBvD,KAAKmD,SAAS,CAACjD,OAAQA,yCAGZ4C,GACXA,EAAMe,iBAEN7D,KAAK8D,eAEF9D,KAAKoC,MAAMK,UACRzC,KAAKoC,MAAMyH,aAAahJ,GAI1Bb,KAAKC,MAAM6J,iBAAiB9J,KAAKoC,MAAMyH,aAAahJ,GAClDb,KAAKoC,MAAMyH,aAAalC,MAAMjI,MAC9BM,KAAKC,MAAMb,OALbY,KAAKC,MAAM8J,cAAc/J,KAAKoC,MAAMyH,aAAalC,MAAMjI,MACrDM,KAAKC,MAAMb,OAMZY,KAAKC,MAAMoH,WACZrH,KAAKmD,SAAS,CAACkE,WAAW,0CAKnBvE,GACX,IAAIpC,EAAMoC,EAAME,OAAOnC,GACnBoC,EAAIlB,OAAAmB,EAAA,EAAAnB,CAAA,GAAO/B,KAAKoC,MAAMyH,cAE1B5G,EAAKvC,GAAKhB,MAAQoD,EAAME,OAAOtD,MAE/BM,KAAKmD,SAAS,CAAC0G,aAAc5G,qCAI7B,IAAIgF,EAAW1H,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAUhD,GAAG,MAK5B,OAJItB,KAAKoC,MAAMiF,YACbY,EAAW,MAIX1H,EAAAC,EAAAC,cAAA,WACGwH,EACD1H,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQxD,OACtBmD,EAAAC,EAAAC,cAAA,uBAGFF,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACbJ,EAAAC,EAAAC,cAAA,QAAME,UAAU,QACdJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACbJ,EAAAC,EAAAC,cAAA,SACEE,UAAU,QACVtB,KAAK,OACLwB,GAAG,QACHC,SAAUd,KAAK0C,aACfhD,MAAOM,KAAKoC,MAAMyH,aAAalC,MAAMjI,MACrCsB,UAAQ,IACVT,EAAAC,EAAAC,cAAA,SAAOE,UAAU,QAAQM,QAAQ,SAAjC,UAGFV,EAAAC,EAAAC,cAAA,OAAKE,UAAU,SACbJ,EAAAC,EAAAC,cAAA,SAAIT,KAAKoC,MAAMlC,OAAOyH,QAIxBpH,EAAAC,EAAAC,cAAA,UACEE,UAAU,MACVQ,QAASnB,KAAK6C,cAFhB,kBA7HctB,aAsJXgD,eAdS,SAAAnC,GACtB,MAAO,CACLhD,MAAOgD,EAAMoC,KAAKpF,MAClBiI,UAAWjF,EAAM6D,SAASoB,YAIH,SAAA5C,GACzB,MAAO,CACLsF,cAAe,SAACpC,EAAOvI,GAAR,OAAkBqF,EFpDT,SAACkD,EAAOvI,GAClC,OAAO,SAAAqF,GACLA,EAhFK,CACLpF,KlBP+B,wBkBwF/B,IAAM2K,EAAe,CACnBtI,KAAMiG,GAGR/I,EAAI+F,KAAK,aAAcqF,EAAc,CACnChL,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EAtFC,CACLpF,KlBZiC,4BkBmG9B6F,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EApFC,CACLpF,KlBjB8B,qBkBkB9BgB,MAkF8B8E,OEkCYG,CAAqBqC,EAAOvI,KACtE0K,iBAAkB,SAACjJ,EAAI8G,EAAOvI,GAAZ,OAAsBqF,EF9Bd,SAAC5D,EAAI8G,EAAOvI,GACxC,OAAO,SAAAqF,GACLA,EApFK,CACLpF,KlBtBiC,0BkB2GjC,IAAM2K,EAAe,CACnBtI,KAAMiG,GAGR/I,EAAI+K,IAAK,cAAgB9I,EAAKmJ,EAAc,CAC1ChL,QAAS,CACPmH,cAAiB,UAAY/G,KAG9BwF,KAAM,SAAAC,GACLJ,EAzFC,CACLpF,KlB5BmC,8BkBsHhC6F,MAAM,SAAAC,GACLC,QAAQC,IAAIF,GACZV,EAvFC,CACLpF,KlBjCgC,uBkBkChCgB,MAqFgC8E,OEYiBG,CAAuBzE,EAAI8G,EAAOvI,OAIxEmF,CAA6CqF,IC/ItDK,+LAGFjK,KAAKC,MAAMiK,mDAIX,IAAIC,EACF5J,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAK/J,EAAAC,EAAAC,cAAC8J,EAAD,CAAMtH,KAAK,aAC9C1C,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,UAAUC,OAAK,EAACC,OAAQ,kBAAK/J,EAAAC,EAAAC,cAAC8J,EAAD,CAAMtH,KAAK,eA2BxD,OAvBGjD,KAAKC,MAAMoE,kBACZ8F,EACE5J,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQrD,WACtBgD,EAAAC,EAAAC,cAAA,OAAKE,UAAWC,IAAQvC,QACtBkC,EAAAC,EAAAC,cAACpC,EAAD,OAGFkC,EAAAC,EAAAC,cAAA,QAAME,UAAWC,IAAQjC,aACvB4B,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,KACE/D,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,iBAAiBC,OAAK,EAACG,UAAWC,KAC9ClK,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,YAAYC,OAAK,EAACG,UAAWC,KACzClK,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,qBAAqBC,OAAK,EAACG,UAAWZ,KAClDrJ,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,gBAAgBC,OAAK,EAACG,UAAWZ,KAC7CrJ,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,YAAYC,OAAK,EAACG,UAAWrD,KACzC5G,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,gBAAgBC,OAAK,EAACG,UAAW9B,KAC7CnI,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,UAAUC,OAAK,EAACG,UAAW/E,IACvClF,EAAAC,EAAAC,cAAC6D,EAAA,EAAD,CAAO8F,KAAK,IAAIC,OAAK,EAACG,UAAWnE,QAQzC9F,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACG8I,UAvCY5I,aAyDNgD,eAZS,SAAAnC,GACtB,MAAO,CACDiC,gBAAsC,OAArBjC,EAAMoC,KAAKpF,QAIT,SAAAqF,GACzB,MAAO,CACLyF,gBAAiB,kBAAMzF,EtB0BlB,SAAAA,GACL,IAAMrF,EAAQG,aAAamL,QAAQ,SAE/BtL,EAGuBG,aAAamL,QAAQ,cACxB,IAAIpC,KACtB7D,EAASnF,KAETmF,EAAStF,EAAYC,IANzBqF,EAASnF,UsB1BAiF,CAA6C0F,ICzD7CU,oLARX,OACEpK,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACAd,EAAAC,EAAAC,cAACmK,GAAD,cALYrJ,aCOEsJ,QACW,cAA7BC,OAAOjD,SAASkD,UAEe,UAA7BD,OAAOjD,SAASkD,UAEhBD,OAAOjD,SAASkD,SAASvI,MACvB,uFClBOwI,GAAe,SAACC,EAAWC,GACtC,OAAOnJ,OAAAmB,EAAA,EAAAnB,CAAA,GACFkJ,EACAC,ICADC,GAAe,CACnB/L,MAAO,KACPiB,MAAO,KACP6D,SAAS,GA0DIkH,GAdC,WAAkC,IAAjChJ,EAAiCiJ,UAAA5H,OAAA,QAAAC,IAAA2H,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAA5H,OAAA,EAAA4H,UAAA,QAAA3H,EAChD,OAAO4H,EAAOjM,MACZ,IzBpDsB,ayBoDO,OA3Cf,SAAC+C,EAAOkJ,GACxB,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IA0CbqH,CAAUnJ,GAC9C,IzBpDwB,eyBoDO,OAxCf,SAACA,EAAOkJ,GAC1B,OAAON,GAAa5I,EAAO,CACzBhD,MAAOkM,EAAOlM,MACdiB,MAAO,KACP6D,SAAS,IAoC6B/E,CAAYiD,EAAOkJ,GACzD,IzBpDqB,YyBoDO,OAjCf,SAAClJ,EAAOkJ,GACvB,OAAON,GAAa5I,EAAO,CACzB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IA8B0BsH,CAASpJ,EAAOkJ,GACnD,IzBnDuB,cyBmDO,OA3Bf,SAAClJ,EAAOkJ,GACzB,OAAON,GAAa5I,EAAO,CAAChD,MAAO,OA0BIqM,CAAWrJ,GAChD,IzBlDwB,eyBkDO,OAxBf,SAACA,EAAOkJ,GAC1B,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IAuBXwH,CAAYtJ,GAClD,IzBlD0B,iByBkDO,OArBf,SAACA,EAAOkJ,GAC5B,OAAON,GAAa5I,EAAO,CACzB/B,MAAO,KACP6D,SAAS,IAkB+ByH,CAAcvJ,GACtD,IzBlDuB,cyBkDO,OAff,SAACA,EAAOkJ,GACzB,OAAON,GAAa5I,EAAO,CACzB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IAY4B0H,CAAWxJ,EAAOkJ,GACvD,QACE,OAAOlJ,ICzDP+I,GAAe,CACnBnF,UAAW,GACX3F,MAAO,MA+BM+K,GAVG,WAAkC,IAAjChJ,EAAiCiJ,UAAA5H,OAAA,QAAAC,IAAA2H,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAA5H,OAAA,EAAA4H,UAAA,QAAA3H,EAChD,OAAO4H,EAAOjM,MACZ,I1BlB+B,wB0BkBS,OApBvB,SAAC+C,EAAOkJ,GAC7B,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IAmBA2H,CAAezJ,GAC9D,I1BlBiC,0B0BkBS,OAjBvB,SAACA,EAAOkJ,GAC/B,OAAON,GAAa5I,EAAO,CACzB4D,UAAWsF,EAAOtF,UAClB3F,MAAO,OAc4CyL,CAAiB1J,EAAOkJ,GACzE,I1BlB8B,uB0BkBS,OAXvB,SAAClJ,EAAOkJ,GAC5B,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IAQqC6H,CAAc3J,EAAOkJ,GACrE,QACE,OAAOlJ,IC7BP+I,GAAe,CACnBnC,MAAO,GACP3I,MAAO,MA8FM+K,GAlBG,WAAkC,IAAjChJ,EAAiCiJ,UAAA5H,OAAA,QAAAC,IAAA2H,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAA5H,OAAA,EAAA4H,UAAA,QAAA3H,EAChD,OAAO4H,EAAOjM,MACZ,I3BrE8B,uB2BqES,OA3EvB,SAAC+C,EAAOkJ,GAC5B,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IA0ED8H,CAAc5J,GAC5D,I3BrEgC,yB2BqES,OAxEvB,SAACA,EAAOkJ,GAC9B,OAAON,GAAa5I,EAAO,CACzB4G,MAAOsC,EAAOrF,SACd5F,MAAO,OAqE2C4L,CAAgB7J,EAAOkJ,GACvE,I3BrE6B,sB2BqES,OAlEvB,SAAClJ,EAAOkJ,GAC3B,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IA+DoCgI,CAAa9J,EAAOkJ,GAEjE,I3BrE6B,sB2BqES,OA7DlB,SAAClJ,EAAOkJ,GAChC,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IA4DFiI,CAAkB/J,GAC/D,I3BrE+B,wB2BqES,OA1DlB,SAACA,EAAOkJ,GAClC,OAAON,GAAa5I,EAAO,CACzB6D,SAAUqF,EAAOrF,SACjB5F,MAAO,KACPgH,WAAW,IAsDsC+E,CAAoBhK,EAAOkJ,GAC1E,I3BrE4B,qB2BqES,OAnDlB,SAAClJ,EAAOkJ,GAC/B,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IAgDmCmI,CAAiBjK,EAAOkJ,GAEpE,I3BrE+B,wB2BqES,OA9ClB,SAAClJ,EAAOkJ,GAClC,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IA6CAoI,CAAoBlK,GACnE,I3BrEiC,0B2BqES,OA3ClB,SAACA,EAAOkJ,GACpC,OAAON,GAAa5I,EAAO,CACzB/B,MAAO,KACPgH,WAAW,IAwCwCkF,CAAsBnK,GACvE,I3BrE8B,uB2BqES,OArClB,SAACA,EAAOkJ,GACjC,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IAkCqCsI,CAAmBpK,EAAOkJ,GAC1E,QACE,OAAOlJ,IC5FP+I,GAAe,CACnBzD,KAAM,KACNrH,MAAO,MAoGM+K,GAtBG,WAAkC,IAAjChJ,EAAiCiJ,UAAA5H,OAAA,QAAAC,IAAA2H,UAAA,GAAAA,UAAA,GAAzBF,GAAcG,EAAWD,UAAA5H,OAAA,EAAA4H,UAAA,QAAA3H,EAChD,OAAO4H,EAAOjM,MACZ,I5BvD0B,mB4BuDS,OA7EvB,SAAC+C,EAAOkJ,GACxB,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IA4ELuI,CAAUrK,GACpD,I5BvD4B,qB4BuDS,OA1EvB,SAACA,EAAOkJ,GAC1B,OAAON,GAAa5I,EAAO,CACzBsF,KAAM4D,EAAO5D,KACbrH,MAAO,OAuEuCqM,CAAYtK,EAAOkJ,GAC/D,I5BvDyB,kB4BuDS,OApEvB,SAAClJ,EAAOkJ,GACvB,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IAiEgCyI,CAASvK,EAAOkJ,GAEzD,I5BvDyB,kB4BuDS,OA/DlB,SAAClJ,EAAOkJ,GAC5B,OAAON,GAAa5I,EAAO,CACrB/B,MAAO,KAAM6D,SAAS,IA6DiB0I,CAAcxK,GACvD,I5BvD2B,oB4BuDS,OA1DlB,SAACA,EAAOkJ,GAC9B,OAAON,GAAa5I,EAAO,CACzB/B,MAAO,KACPgH,WAAW,IAuDkCwF,CAAgBzK,GAC3D,I5BvDwB,iB4BuDS,OApDlB,SAACA,EAAOkJ,GAC3B,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,EACTmD,WAAW,IAgD6ByF,CAAa1K,EAAOkJ,GAE5D,I5BvD2B,oB4BuDS,OA9ClB,SAAClJ,EAAOkJ,GAC9B,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IA6CJ6I,CAAgB3K,GAC3D,I5BvD6B,sB4BuDS,OA3ClB,SAACA,EAAOkJ,GAChC,OAAON,GAAa5I,EAAO,CACzB/B,MAAO,KACPgH,WAAW,IAwCoC2F,CAAkB5K,GAC/D,I5BvD0B,mB4BuDS,OArClB,SAACA,EAAOkJ,GAC7B,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IAkCiC+I,CAAe7K,EAAOkJ,GAEhE,I5BvD2B,oB4BuDS,OAhClB,SAAClJ,EAAOkJ,GAC9B,OAAON,GAAa5I,EAAO,CAAE/B,MAAO,KAAM6D,SAAS,IA+BJgJ,CAAgB9K,GAC3D,I5BvD6B,sB4BuDS,OA7BlB,SAACA,EAAOkJ,GAChC,OAAON,GAAa5I,EAAO,CACzB/B,MAAO,KACPgH,WAAW,IA0BoC8F,CAAkB/K,GAC/D,I5BvD0B,mB4BuDS,OAvBlB,SAACA,EAAOkJ,GAC7B,OAAON,GAAa5I,EAAO,CACvB/B,MAAOiL,EAAOjL,MACd6D,SAAS,IAoBiCkJ,CAAehL,EAAOkJ,GAClE,QACE,OAAOlJ,ICrFPiL,GAAmBvC,OAAOwC,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClCjJ,KAAMkJ,GACN1H,UAAW2H,GACX1H,SAAU2H,GACVlG,KAAMmG,KAGFC,GAAQC,aAAYP,GAAaH,GACrCW,aAAgBC,QAGZC,GACJ3N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAUL,MAAOA,IACfvN,EAAAC,EAAAC,cAAC2N,GAAD,OAKJC,IAAS/D,OAAO4D,GAAKI,SAASC,eAAe,SN6FvC,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9J,KAAK,SAAA+J,GACjCA,EAAaC","file":"static/js/main.0daf2c02.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalContainer\":\"Modal_ModalContainer__20Ofz\",\"Modal\":\"Modal_Modal__1GtWm\",\"Content\":\"Modal_Content__1-WJx\",\"Title\":\"Modal_Title__Yn3Im\",\"Links\":\"Modal_Links__3kwS4\",\"Link\":\"Modal_Link__23sWW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Auth_Container__1mT3e\",\"Box\":\"Auth_Box__WDDrv\",\"FormContainer\":\"Auth_FormContainer__38UCU\",\"ImgContainer\":\"Auth_ImgContainer__19ehb\",\"Login\":\"Auth_Login__2nKyq\",\"Signup\":\"Auth_Signup__270Pu\",\"Form\":\"Auth_Form__1Tklh\",\"FormTitle\":\"Auth_FormTitle__3PoPS\",\"InputGroup\":\"Auth_InputGroup__MXdOc\",\"Btn\":\"Auth_Btn__1ZyE6\",\"Footer\":\"Auth_Footer__3APo0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotebookItem\":\"NotebookItem_NotebookItem__1jiO9\",\"Title\":\"NotebookItem_Title__3nVKE\",\"Notes\":\"NotebookItem_Notes__33Zle\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Notebooks\":\"Notebooks_Notebooks__2PTXZ\",\"Title\":\"Notebooks_Title__1tAYl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navbar\":\"Navbar_Navbar__1IxrI\",\"Logo\":\"Navbar_Logo__fva-O\",\"Navigation\":\"Navbar_Navigation__3Zo5U\",\"Item\":\"Navbar_Item__246cd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Item\":\"NoteItem_Item__3VPe1\",\"Line\":\"NoteItem_Line__ABv9k\",\"Description\":\"NoteItem_Description__5Aanq\",\"Title\":\"NoteItem_Title__2c5cs\",\"Footer\":\"NoteItem_Footer__28W50\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Note_Content__2NX5Z\",\"Description\":\"Note_Description__2fvVI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Layout_Title__3n64m\",\"Btn\":\"Layout_Btn__24xli\",\"Content\":\"Layout_Content__PrDi6\",\"Container\":\"Layout_Container__ffMht\",\"Navbar\":\"Layout_Navbar__3q20Y\",\"MainContent\":\"Layout_MainContent__2OixL\",\"Links\":\"Layout_Links__1p8Wt\"};","import axios from 'axios';\n\nconst API = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n  }\n});\n\nexport default API;\n","import * as actionTypes from './actionTypes';\nimport API from '../../Api';\n\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\n\nexport const authSuccess = (token) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: token\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expires_at');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\n\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n\n    const authData = {\n      email: email,\n      password: password\n    }\n\n    API.post('/login', authData)\n      .then( response => {\n        localStorage.setItem('token', response.data.access_token);\n        localStorage.setItem('expires_at', response.data.expires_at);\n        dispatch(authSuccess(response.data.access_token));\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(authFail(err));\n      })\n  };\n};\n\nexport const signupStart = () => {\n  return {\n    type: actionTypes.SIGNUP_START\n  };\n};\n\nexport const signupSuccess = () => {\n  return {\n    type: actionTypes.SIGNUP_SUCCESS\n  };\n};\n\nexport const signupFail = (error) => {\n  return {\n    type: actionTypes.SIGNUP_FAIL,\n    error: error\n  };\n};\n\nexport const signup = (name, email, password, passwordConfirm) => {\n  return dispatch => {\n    dispatch(signupStart());\n\n    const signupData = {\n      name: name,\n      email: email,\n      password: password,\n      password_confirmation: passwordConfirm\n    }\n\n    API.post('/signup', signupData)\n      .then( response => {\n        dispatch(signupSuccess())\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(signupFail(err));\n      })\n  };\n};\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if(!token) {\n      dispatch(logout());\n    } else {\n        const expirationDate = localStorage.getItem('expires_at');\n        if(expirationDate > new Date()) {\n          dispatch(logout());\n        } else {\n          dispatch(authSuccess(token));\n        }\n    }\n  }\n}\n","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\n\nexport const SIGNUP_START = 'SIGNUP_START';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\n\nexport const FETCH_NOTEBOOKS_START = 'FETCH_NOTEBOOKS_START';\nexport const FETCH_NOTEBOOKS_SUCCESS = 'FETCH_NOTEBOOKS_SUCCESS';\nexport const FETCH_NOTEBOOKS_FAIL = 'FETCH_NOTEBOOKS_FAIL';\n\nexport const FETCH_NOTEBOOK_START = 'FETCH_NOTEBOOK_START';\nexport const FETCH_NOTEBOOK_SUCCESS = 'FETCH_NOTEBOOK_SUCCESS';\nexport const FETCH_NOTEBOOK_FAIL = 'FETCH_NOTEBOOK_FAIL';\n\nexport const POST_NOTEBOOK_START = 'POST_NOTEBOOK_START';\nexport const POST_NOTEBOOK_SUCCESS = 'POST_NOTEBOOK_SUCCESS';\nexport const POST_NOTEBOOK_FAIL = 'POST_NOTEBOOK_FAIL';\n\nexport const UPDATE_NOTEBOOK_START = 'UPDATE_NOTEBOOK_START';\nexport const UPDATE_NOTEBOOK_SUCCESS = 'UPDATE_NOTEBOOK_SUCCESS';\nexport const UPDATE_NOTEBOOK_FAIL = 'UPDATE_NOTEBOOK_FAIL';\n\nexport const REMOVE_NOTEBOOK_START = 'REMOVE_NOTEBOOK_START';\nexport const REMOVE_NOTEBOOK_SUCCESS = 'REMOVE_NOTEBOOK_SUCCESS';\nexport const REMOVE_NOTEBOOK_FAIL = 'REMOVE_NOTEBOOK_FAIL';\n\nexport const FETCH_NOTE_START = 'FETCH_NOTE_START';\nexport const FETCH_NOTE_SUCCESS = 'FETCH_NOTE_SUCCESS';\nexport const FETCH_NOTE_FAIL = 'FETCH_NOTE_FAIL';\n\nexport const POST_NOTE_START = 'POST_NOTE_START';\nexport const POST_NOTE_SUCCESS = 'POST_NOTE_SUCCESS';\nexport const POST_NOTE_FAIL = 'POST_NOTE_FAIL';\n\nexport const UPDATE_NOTE_START = 'UPDATE_NOTE_START';\nexport const UPDATE_NOTE_SUCCESS = 'UPDATE_NOTE_SUCCESS';\nexport const UPDATE_NOTE_FAIL = 'UPDATE_NOTE_FAIL';\n\nexport const REMOVE_NOTE_START = 'REMOVE_NOTE_START';\nexport const REMOVE_NOTE_SUCCESS = 'REMOVE_NOTE_SUCCESS';\nexport const REMOVE_NOTE_FAIL = 'REMOVE_NOTE_FAIL';\n","export const empty = (value) => {\n  return value === \"\";\n}\n\nexport const match = (password, passwordConfirm) => {\n  return password === passwordConfirm;\n}\n\nexport const validEmail = (value) => {\n  var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(value).toLowerCase());\n}\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../../styles/form.css';\nimport classes from '../Auth.module.css';\n\nclass Login extends Component {\n  render() {\n\n    let emailErrors = null;\n    if(this.props.errors.email) {\n      emailErrors = this.props.errors.email.map((error, index) => {\n        return (<p key={index}> {error} </p>)\n      })\n    }\n\n    return(\n      <div className={classes.Login}>\n        <h1 className={classes.FormTitle}>Login</h1>\n\n        <form className={classes.Form} id=\"loginForm\">\n          <div className={classes.InputGroup + \" InputGroup\"}>\n            <input\n              className=\"Input\"\n              type=\"text\"\n              id=\"email\"\n              onChange={this.props.changed}\n              required />\n            <label className=\"Label\" htmlFor=\"email\">Email</label>\n          </div>\n\n          <div className=\"Error\">\n            {emailErrors}\n          </div>\n\n          <div className={classes.InputGroup + \" InputGroup\"}>\n            <input\n              className=\"Input\"\n              type=\"password\"\n              id=\"password\"\n              onChange={this.props.changed}\n              required />\n            <label className=\"Label\" htmlFor=\"password\">Password</label>\n          </div>\n\n          <div className=\"Error\">\n            <p>{this.props.errors.password}</p>\n          </div>\n\n          <button\n            className={classes.Btn + \" Btn\"}\n            onClick={this.props.submit}>Login</button>\n        </form>\n\n        <div className={classes.Footer}>\n          <p>Not a member yet? <Link to=\"/signup\">Sign Up</Link> </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport '../../../styles/form.css';\nimport classes from '../Auth.module.css';\n\nclass Signup extends Component {\n  render() {\n\n    let emailErrors = null;\n    if(this.props.errors.email) {\n      emailErrors = this.props.errors.email.map((error, index) => {\n        return (<p key={index}> {error} </p>)\n      })\n    }\n\n    let passwordErrors = null;\n    if(this.props.errors.passwordConfirm) {\n      passwordErrors = this.props.errors.passwordConfirm.map((error, index) => {\n        return (<p key={index}> {error} </p>)\n      })\n    }\n\n    return(\n      <div className={classes.Signup}>\n        <h1 className={classes.FormTitle}>Signup</h1>\n\n        <form className={classes.Form} id=\"signupForm\">\n          <div className={classes.InputGroup + \" InputGroup\"}>\n            <input\n              className=\"Input\"\n              type=\"text\"\n              id=\"name\"\n              onChange={this.props.changed}\n              required />\n            <label className=\"Label\" htmlFor=\"name\">Name</label>\n          </div>\n\n          <div className=\"Error\">\n            <p>{this.props.errors.name}</p>\n          </div>\n\n          <div className={classes.InputGroup + \" InputGroup\"}>\n            <input\n              className=\"Input\"\n              type=\"text\"\n              id=\"email\"\n              onChange={this.props.changed}\n              required />\n            <label className=\"Label\" htmlFor=\"email\">Email</label>\n          </div>\n\n          <div className=\"Error\">\n            {emailErrors}\n          </div>\n\n          <div className={classes.InputGroup + \" InputGroup\"}>\n            <input\n              className=\"Input\"\n              type=\"password\"\n              id=\"password\"\n              onChange={this.props.changed}\n              required />\n            <label className=\"Label\" htmlFor=\"password\">Password</label>\n          </div>\n\n          <div className=\"Error\">\n            <p>{this.props.errors.password}</p>\n          </div>\n\n          <div className={classes.InputGroup + \" InputGroup\"}>\n            <input\n              className=\"Input\"\n              type=\"password\"\n              id=\"passwordConfirm\"\n              onChange={this.props.changed}\n              required />\n            <label className=\"Label\" htmlFor=\"passwordConfirm\">Confirm Password</label>\n          </div>\n\n          <div className=\"Error\">\n            {passwordErrors}\n          </div>\n\n          <button\n            className={classes.Btn + \" Btn\"}\n            onClick={this.props.submit}>Signup</button>\n        </form>\n\n        <div className={classes.Footer}>\n          <p>Already a member? <Link to=\"/\">Log In</Link> </p>\n        </div>\n      </div>\n      );\n}\n}\n\nexport default Signup;\n\n","import React from 'react';\n\nimport classes from './Spinner.css';\n\nconst spinner = () => (\n  <div className={classes.Loader}>Loading...</div>\n);\n\nexport default spinner;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport * as validate from '../../validation';\n\nimport Login from './Login/Login';\nimport Signup from './Signup/Signup';\nimport Spinner from '../../ui/Spinner/Spinner';\n\nimport classes from './Auth.module.css';\n\nclass Auth extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loginForm: {\n        email: {\n          value: \"\",\n          errors: {\n            required: \"Email is required\",\n            invalid: \"Email is invalid\"\n          }\n        },\n        password: {\n          value: \"\",\n          errors: {\n            required: \"Password is required\"\n          }\n        },\n      },\n      signupForm: {\n        name: {\n          value: \"\",\n          errors: {\n            required: \"Name is required\"\n          }\n        },\n        email: {\n          value: \"\",\n          errors: {\n            required: \"Email is required\",\n            invalid: \"Email is invalid\"\n          }\n        },\n        password: {\n          value: \"\",\n          errors: {\n            required: \"Password is required\"\n          }\n        },\n        passwordConfirm: {\n          value: \"\",\n          errors: {\n            required: \"Password confirm is required\",\n            match: \"Passwords do not match\"\n          }\n        },\n      },\n      errors: {\n        name: [],\n        email: [],\n        password: [],\n        passwordConfirm: []\n      },\n      isValid: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let formName = event.target.form.id;\n    let form = {...this.state[formName]}\n    let key = event.target.id;\n\n    form[key].value = event.target.value;\n\n    this.setState({ [formName]: form });\n  }\n\n  validateForm(formName) {\n    let form = this.state[formName];\n    let errors;\n\n    if(formName === \"signupForm\") {\n      errors = {\n        name: [],\n        email: [],\n        password: [],\n        passwordConfirm: []\n      };\n\n      if(validate.empty(form.name.value)) errors.name.push(form.name.errors.required)\n      if(validate.empty(form.email.value)) errors.email.push(form.email.errors.required)\n      if(!validate.validEmail(form.email.value)) errors.email.push(form.email.errors.invalid)\n      if(validate.empty(form.password.value)) errors.password.push(form.password.errors.required)\n      if(validate.empty(form.passwordConfirm.value)) errors.passwordConfirm.push(form.passwordConfirm.errors.required)\n      if(!validate.match(form.password.value, form.passwordConfirm.value)) errors.passwordConfirm.push(form.passwordConfirm.errors.match)\n\n    } else if(formName === \"loginForm\") {\n      errors = {\n        email: [],\n        password: []\n      };\n\n      if(validate.empty(form.email.value)) errors.email.push(form.email.errors.required)\n      if(!validate.validEmail(form.email.value)) errors.email.push(form.email.errors.invalid)\n      if(validate.empty(form.password.value)) errors.password.push(form.password.errors.required)\n\n    }\n\n    let valid = true;\n    for(let prop in errors) {\n      if(errors[prop].length !== 0 && errors[prop][0] !== undefined) {\n        valid = false;\n      }\n    }\n\n    this.setState({isValid: valid})\n    this.setState({errors: errors});\n\n  }\n\n  submitForm(formName) {\n    if(formName === \"signupForm\") {\n      this.props.onSignup(this.state.signupForm.name.value,\n        this.state.signupForm.email.value,\n        this.state.signupForm.password.value,\n        this.state.signupForm.passwordConfirm.value);\n      this.props.onAuth(this.state.signupForm.email.value, this.state.signupForm.password.value);\n    } else if(formName === \"loginForm\" ) {\n      this.props.onAuth(this.state.loginForm.email.value, this.state.loginForm.password.value);\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var form = event.target.form.id;\n\n    this.validateForm(form);\n\n    if(this.state.isValid) {\n      this.submitForm(form);\n    }\n  }\n\n  render() {\n    let form = (<Login\n      changed={this.handleChange}\n      errors={this.state.errors}\n      submit={this.handleSubmit}/>);\n\n    if(this.props.form === \"signup\") {\n      form = (<Signup\n        changed={this.handleChange}\n        errors={this.state.errors}\n        submit={this.handleSubmit}/>);\n    }\n\n    if(this.props.loading) {\n      form = <Spinner />\n    }\n\n    let authRedirect = null;\n    if(this.props.isAuthenticated) {\n      authRedirect = <Redirect to=\"/\" />\n      }\n\n    return(\n      <div className={classes.Container}>\n        <div className={classes.Box}>\n          <div className={classes.ImgContainer}>\n          </div>\n          <div className={classes.FormContainer}>\n            {authRedirect}\n            {form}\n          </div>\n        </div>\n      </div>\n      );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password) => dispatch(actions.auth(email, password)),\n    onSignup: (name, email, password, passwordConfirm) => dispatch(actions.signup(name, email, password, passwordConfirm))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n    loading: state.auth.loading\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport * as actions from '../../../store/actions/index';\n\nclass Logout extends Component {\n  componentDidMount () {\n    this.props.onLogout();\n  }\n\n  render () {\n    return <Redirect to=\"/\"/>;\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './Navbar.module.css';\n\nconst sidebar = (props) => {\n\n  return(\n    <div className={classes.Navbar}>\n      <div className={classes.Logo}>\n        <p>NotesApp</p>\n      </div>\n\n      <nav className={classes.Navigation}>\n        <ul>\n          <li className={classes.Item}><Link to=\"/\"> Home </Link></li>\n          <li className={classes.Item}><Link to=\"/logout\"> Logout </Link></li>\n        </ul>\n      </nav>\n    </div>\n    );\n}\n\nexport default sidebar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from './NotebookItem.module.css';\n\nconst notebookItem = (props) => {\n\n  return(\n    <Link\n      to={{\n        pathname: (\"/notebook/\" + props.id ),\n        state: {notebook_title: props.notebook_title}\n        }}\n      className={classes.NotebookItem}>\n      <h3 className={classes.Title}>{props.notebook_title}</h3>\n    </Link>\n    );\n}\n\nexport default notebookItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nimport NotebookItem from '../../components/NotebookItem/NotebookItem';\n\nimport classes from './Notebooks.module.css';\n\nclass Notebooks extends Component {\n\n  componentDidMount() {\n    this.props.onGetNotebooks(this.props.token);\n    this.setState({notebooks: this.props.notebooks});\n  }\n\n  render() {\n\n    let notebooks = null;\n\n    if(this.props.notebooks) {\n      notebooks = this.props.notebooks.map(notebook => {\n        return(\n          <NotebookItem notebook_title={notebook.name} key={notebook.id} id={notebook.id}/>\n        )\n      })\n    }\n\n    return(\n      <div className={classes.Notebooks}>\n        {notebooks}\n      </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notebooks: state.notebooks.notebooks,\n    token: state.auth.token,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetNotebooks: (token) => dispatch(actions.notebooks(token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notebooks);\n","import * as actionTypes from './actionTypes';\nimport API from '../../Api';\n\nexport const notebooksStart = () => {\n  return {\n    type: actionTypes.FETCH_NOTEBOOKS_START\n  };\n};\n\nexport const notebooksSuccess = (notebooks) => {\n  return {\n    type: actionTypes.FETCH_NOTEBOOKS_SUCCESS,\n    notebooks: notebooks\n  };\n};\n\nexport const notebooksFail = (error) => {\n  return {\n    type: actionTypes.FETCH_NOTEBOOKS_FAIL,\n    error: error\n  };\n};\n\nexport const notebooks = (token) => {\n  return dispatch => {\n    dispatch(notebooksStart());\n\n    API.get('/notebooks', {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(notebooksSuccess(response.data.data))\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(notebooksFail(err));\n      })\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Notebooks from '../../containers/Notebooks/Notebooks';\n\nimport classes from '../../containers/Layout/Layout.module.css';\n\nconst home = (props) => {\n\n  return(\n    <div className={classes.Home}>\n      <div className={classes.Title}>\n        <h1>Home</h1>\n\n        <Link to=\"notebook/new\">\n          <button className={classes.Btn}>New Notebook</button>\n        </Link>\n      </div>\n\n      <div className={classes.Content}>\n        <Notebooks />\n      </div>\n    </div>\n    );\n}\n\nexport default home;\n","import React from 'react';\n\nimport classes from './Modal.module.css';\n\nconst modal = (props) => (\n  <div aria-modal=\"true\">\n    <div\n      className={classes.ModalContainer}\n      onClick={props.hideModal}\n      style={{\n      transform: props.show? 'translateY(0)' : 'translateY(-100vh)',\n      }}\n    ></div>\n    <div\n      className={classes.Modal}\n      style={{\n      transform: props.show? 'translateY(0)' : 'translateY(-100vh)',\n      opacity: props.show? '1' : '0'\n      }}\n    >\n      {props.children}\n    </div>\n  </div>\n);\n\nexport default modal;\n","import React from 'react';\n\nimport classes from '../../ui/Modal/Modal.module.css';\n\nconst deleteConfirmation = (props) => (\n  <div className={classes.Content}>\n    <div className={classes.Title}>\n      <h1>Are you sure?</h1>\n    </div>\n\n    <div className={classes.Links}>\n      <p onClick={props.delete} className={classes.Link} role=\"link\">Yes</p>\n      <p onClick={props.cancel} className={classes.Link} role=\"link\">No</p>\n    </div>\n  </div>\n);\n\nexport default deleteConfirmation;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\n\nimport Modal from '../../ui/Modal/Modal';\nimport DeleteConfirmation from '../../components/DeleteConfirmation/DeleteConfirmation';\n\nimport classes from '../../containers/Layout/Layout.module.css';\nimport styles from './Note.module.css';\n\nclass Note extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      submitted: false,\n      showModal: false\n    }\n\n    this.deleteNote = this.deleteNote.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onGetNote(this.props.token, this.props.match.params.id);\n  }\n\n  deleteNote() {\n    this.props.onDeleteNote(this.props.token, this.props.match.params.id);\n\n    if(this.props.submitted) {\n      this.setState({submitted: true});\n    }\n  }\n\n  showModal = () => {\n    this.setState({showModal: true})\n  }\n\n  hideModal = () => {\n    this.setState({showModal: false})\n  }\n\n  render() {\n\n    let note = null;\n\n    if(this.props.note) {\n      note = (\n        <div>\n          <div className={classes.Title}>\n            <h1>{this.props.note.title}</h1>\n\n            <div className={classes.Links}>\n            <Link to={{\n                      pathname: (this.props.match.params.id + \"/edit\"),\n                      state: { notebook_id: this.props.location.state.notebook_id,\n                               title: this.props.location.state.title,\n                               notebook_title: this.props.location.state.notebook_title,\n                               note: this.props.note }\n              }}>\n              <button className={classes.Btn}>Edit</button>\n            </Link>\n\n            <button\n              onClick={this.showModal}>Delete</button>\n          </div>\n\n          <Modal show={this.state.showModal} hideModal={this.hideModal}>\n            <DeleteConfirmation\n              delete={this.deleteNote}\n              cancel={this.hideModal}\n            />\n          </Modal>\n\n          </div>\n\n          <div className={styles.Content}>\n            <div className={styles.Description}>\n              <p>{this.props.note.description}</p>\n            </div>\n          </div>\n        </div>\n        );\n    }\n\n    let redirect = <Redirect to=\"/\" />\n    if(!this.state.submitted) {\n      redirect = null;\n    }\n\n    return(\n      <div>\n        {redirect}\n        {note}\n      </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    note: state.note.note,\n    token: state.auth.token,\n    submitted: state.note.submitted\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetNote: (token, id) => dispatch(actions.note(token, id)),\n    onDeleteNote: (token, id) => dispatch(actions.remove(id, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\n","import * as actionTypes from './actionTypes';\nimport API from '../../Api';\n\nexport const noteStart = () => {\n  return {\n    type: actionTypes.FETCH_NOTE_START\n  };\n};\n\nexport const noteSuccess = (note) => {\n  return {\n    type: actionTypes.FETCH_NOTE_SUCCESS,\n    note: note\n  };\n};\n\nexport const noteFail = (error) => {\n  return {\n    type: actionTypes.FETCH_NOTE_FAIL,\n    error: error\n  };\n};\n\nconst postNoteStart = (state, action) => {\n  return {\n    type: actionTypes.POST_NOTE_START\n  };\n};\n\nconst postNoteSuccess = (state, action) => {\n  return {\n    type: actionTypes.POST_NOTE_SUCCESS\n  };\n};\n\nconst postNoteFail = (error) => {\n  return {\n    type: actionTypes.POST_NOTE_FAIL,\n    error: error\n  };\n}\n\nconst updateNoteStart = (state, action) => {\n  return {\n    type: actionTypes.UPDATE_NOTE_START\n  };\n};\n\n\nconst updateNoteSuccess = (state, action) => {\n  return {\n    type: actionTypes.UPDATE_NOTE_SUCCESS\n  };\n};\n\nconst updateNoteFail = (error) => {\n  return {\n    type: actionTypes.UPDATE_NOTE_FAIL,\n    error: error\n  };\n}\n\nconst removeNoteStart = (state, action) => {\n  return {\n    type: actionTypes.UPDATE_NOTE_START\n  };\n};\n\n\nconst removeNoteSuccess = (state, action) => {\n  return {\n    type: actionTypes.REMOVE_NOTE_SUCCESS\n  };\n};\n\nconst removeNoteFail = (error) => {\n  return {\n    type: actionTypes.REMOVE_NOTE_FAIL,\n    error: error\n  };\n}\n\nexport const note = (token, id) => {\n  return dispatch => {\n    dispatch(noteStart());\n\n    API.get(('/notes/' + id), {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(noteSuccess(response.data.data))\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(noteFail(err));\n      })\n  };\n};\n\nexport const post = (title, description, notebook_id, token) => {\n  return dispatch => {\n    dispatch(postNoteStart());\n\n    const noteData = {\n      title: title,\n      description: description,\n      notebooks_id: notebook_id\n    }\n\n    API.post('/notes', noteData, {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(postNoteSuccess())\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(postNoteFail(err));\n      })\n  };\n};\n\nexport const update = (id, title, description, notebook_id, token) => {\n  return dispatch => {\n    dispatch(updateNoteStart());\n\n    const noteData = {\n      title: title,\n      description: description,\n      notebooks_id: notebook_id\n    }\n\n    API.put(('/notes/' + id), noteData, {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(updateNoteSuccess())\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(updateNoteFail(err));\n      })\n  };\n};\n\nexport const remove = (id, token) => {\n  return dispatch => {\n    dispatch(removeNoteStart());\n\n    API.delete(('/notes/' + id), {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(removeNoteSuccess())\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(removeNoteFail(err));\n      })\n  };\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport classes from '../NotebookItem/NotebookItem.module.css';\nimport styles from './NoteItem.module.css';\n\nconst noteItem = (props) => {\n  var months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\n  let time = props.date.split(\" \")[0];\n  let date = new Date(time);\n  let created = months[date.getMonth()] + \", \" + date.getFullYear();\n\n  return(\n    <div className={classes.NotebookItem + ' ' + styles.Item }>\n      <Link to={{\n                pathname:\"/note/\" + props.id,\n                state: { notebook_id: props.notebook_id,\n                         notebook_title: props.notebook_title}\n                }}>\n        <h3 className={classes.Title + ' ' + styles.Title }>{props.title}</h3>\n      </Link>\n      <hr className={styles.Line} />\n      <p className={classes.Notes + ' ' + styles.Description}>{props.description}</p>\n      <div className={styles.Footer}>\n        <p>{created}</p>\n      </div>\n    </div>\n    );\n}\n\nexport default noteItem;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\n\nimport NoteItem from '../../components/NoteItem/NoteItem';\nimport Modal from '../../ui/Modal/Modal';\nimport DeleteConfirmation from '../../components/DeleteConfirmation/DeleteConfirmation';\n\nimport classes from '../Notebooks/Notebooks.module.css';\nimport styles from '../../containers/Layout/Layout.module.css';\n\nclass Notebook extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: this.props.match.params.id,\n      notebookTitle: this.props.location.state.notebook_title,\n      submitted: false,\n      showModal: false\n    }\n\n\n    this.deleteNotebook = this.deleteNotebook.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onGetNotebook(this.props.token, this.props.match.params.id);\n  }\n\n  deleteNotebook() {\n    this.props.onDeleteNotebook(this.props.token, this.props.match.params.id);\n\n    if(this.props.submitted) {\n      this.setState({submitted: true});\n    }\n  }\n\n  showModal = () => {\n    this.setState({showModal: true})\n  }\n\n  hideModal = () => {\n    this.setState({showModal: false})\n  }\n\n  render() {\n\n    let notes = null;\n\n    if(this.props.notebook) {\n      notes = this.props.notebook.map(notebook => {\n        return(\n          <NoteItem\n            title={notebook.title}\n            key={notebook.id}\n            description={notebook.description}\n            date={notebook.created_at}\n            notebook_id={this.state.id}\n            notebook_title={this.state.notebookTitle}\n            id={notebook.id} />\n          )\n      })\n    }\n\n    let redirect = <Redirect to=\"/\" />\n    if(!this.state.submitted) {\n      redirect = null;\n    }\n\n    return(\n      <div>\n        {redirect}\n        <div className={classes.Title + \" \" + styles.Title}>\n          <h1>{this.state.notebookTitle}</h1>\n\n          <div className={styles.Links}>\n            <Link to={{\n              pathname: \"/note/new\",\n              state: {notebook_id: this.state.id,\n              notebook_title: this.props.location.state.notebook_title}\n              }}\n            >\n              <button className={styles.Btn}>New Note</button>\n            </Link>\n\n            <Link to={{\n              pathname: (this.props.match.params.id + \"/edit\"),\n              state: {notebook_id: this.state.id,\n              title: this.state.notebookTitle}\n              }}>\n              <button className={classes.Btn}>Edit</button>\n            </Link>\n\n            <button\n              className={classes.Btn}\n              onClick={this.showModal}>Delete</button>\n          </div>\n\n          <Modal show={this.state.showModal} hideModal={this.hideModal}>\n            <DeleteConfirmation\n              delete={this.deleteNotebook}\n              cancel={this.hideModal}\n            />\n          </Modal>\n\n        </div>\n\n        <div className={classes.Notebooks}>\n          {notes}\n        </div>\n      </div>\n      );\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    notebook: state.notebook.notes,\n    token: state.auth.token,\n    submitted: state.note.submitted\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetNotebook: (token, id) => dispatch(actions.notebook(token, id)),\n    onDeleteNotebook: (token, id) => dispatch(actions.notebookRemove(id, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notebook);\n","import * as actionTypes from './actionTypes';\nimport API from '../../Api';\n\nexport const notebookStart = () => {\n  return {\n    type: actionTypes.FETCH_NOTEBOOK_START\n  };\n};\n\nexport const notebookSuccess = (notebook) => {\n  return {\n    type: actionTypes.FETCH_NOTEBOOK_SUCCESS,\n    notebook: notebook\n  };\n};\n\nexport const notebookFail = (error) => {\n  return {\n    type: actionTypes.FETCH_NOTEBOOK_FAIL,\n    error: error\n  };\n};\n\nconst postNotebookStart = (state, action) => {\n  return {\n    type: actionTypes.POST_NOTEBOOK_START\n  };\n};\n\nconst postNotebookSuccess = (state, action) => {\n  return {\n    type: actionTypes.POST_NOTEBOOK_SUCCESS\n  };\n};\n\nconst postNotebookFail = (error) => {\n  return {\n    type: actionTypes.POST_NOTEBOOK_FAIL,\n    error: error\n  };\n}\n\nconst updateNotebookStart = (state, action) => {\n  return {\n    type: actionTypes.UPDATE_NOTEBOOK_START\n  };\n};\n\n\nconst updateNotebookSuccess = (state, action) => {\n  return {\n    type: actionTypes.UPDATE_NOTEBOOK_SUCCESS\n  };\n};\n\nconst updateNotebookFail = (error) => {\n  return {\n    type: actionTypes.UPDATE_NOTEBOOK_FAIL,\n    error: error\n  };\n}\n\nconst removeNotebookStart = (state, action) => {\n  return {\n    type: actionTypes.REMOVE_NOTE_START\n  };\n};\n\n\nconst removeNotebookSuccess = (state, action) => {\n  return {\n    type: actionTypes.REMOVE_NOTE_SUCCESS\n  };\n};\n\nconst removeNotebookFail = (error) => {\n  return {\n    type: actionTypes.REMOVE_NOTE_FAIL,\n    error: error\n  };\n}\n\n\nexport const notebook = (token, id) => {\n  return dispatch => {\n    dispatch(notebookStart());\n\n    API.get(('/notebook/' + id), {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(notebookSuccess(response.data.data))\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(notebookFail(err));\n      })\n  };\n};\n\nexport const notebookPost = (title, token) => {\n  return dispatch => {\n    dispatch(postNotebookStart());\n\n    const notebookData = {\n      name: title\n    }\n\n    API.post('/notebooks', notebookData, {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(postNotebookSuccess())\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(postNotebookFail(err));\n      })\n  };\n};\n\nexport const notebookUpdate = (id, title, token) => {\n  return dispatch => {\n    dispatch(updateNotebookStart());\n\n    const notebookData = {\n      name: title\n    }\n\n    API.put(('/notebooks/' + id), notebookData, {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(updateNotebookSuccess())\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(updateNotebookFail(err));\n      })\n  };\n};\n\nexport const notebookRemove = (id, token) => {\n  return dispatch => {\n    dispatch(removeNotebookStart());\n\n    API.delete(('/notebooks/' + id), {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    })\n      .then( response => {\n        dispatch(removeNotebookSuccess())\n      })\n      .catch(err => {\n        console.log(err);\n        dispatch(removeNotebookFail(err));\n      })\n  };\n};\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport * as validate from '../../validation';\n\nimport classes from '../../containers/Layout/Layout.module.css';\nimport '../../styles/form.css';\n\nclass Note extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      noteForm: {\n        title: {\n          value: \"\",\n          errors: {\n            required: \"Title is required\"\n          }\n        },\n        description: {\n          value: \"\"\n        },\n        notebook_id: this.props.location.state.notebook_id,\n        id: null\n      },\n      submitted: false,\n      errors: {\n        title: []\n      },\n      isValid: false\n    }\n\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n\n    if(this.props.location.state.note) {\n      let descriptionValue = (this.props.location.state.note.description)? this.props.location.state.note.description : \"\";\n\n      let note = {\n      title: {\n          value: this.props.location.state.note.title,\n          errors: {\n            required: \"Title is required\"\n          }\n        },\n        description: {\n          value: descriptionValue\n        },\n        notebook_id: this.props.location.state.notebook_id,\n        id: this.props.location.state.note.id\n      }\n      this.setState({noteForm: note});\n    }\n\n  }\n\n  validateForm() {\n    let form = this.state.noteForm;\n    let errors;\n\n    errors = {\n      title: [],\n    };\n\n    if(validate.empty(form.title.value)) errors.title.push(form.title.errors.required)\n\n    let valid = true;\n    for(let prop in errors) {\n      if(errors[prop].length !== 0 && errors[prop][0] !== undefined) {\n        valid = false;\n      }\n    }\n\n    this.setState({isValid: valid})\n    this.setState({errors: errors});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.validateForm();\n\n    if(this.state.isValid) {\n      if(!this.state.noteForm.id) {\n        this.props.onNewNote(this.state.noteForm.title.value,\n          this.state.noteForm.description.value,\n          this.state.noteForm.notebook_id,\n          this.props.token);\n      } else {\n        this.props.onUpdateNote(this.state.noteForm.id,\n          this.state.noteForm.title.value,\n          this.state.noteForm.description.value,\n          this.state.noteForm.notebook_id,\n          this.props.token);\n      }\n      if(this.props.submitted) {\n        this.setState({submitted: true});\n      }\n    }\n\n  }\n\n  handleChange(event) {\n    let key = event.target.id;\n    let form = {...this.state.noteForm};\n\n    form[key].value = event.target.value;\n\n    this.setState({noteForm: form});\n  }\n\n  render() {\n    let redirect = <Redirect\n      to={{pathname: \"/notebook/\" + this.props.location.state.notebook_id,\n      state: {notebook_title: this.props.location.state.notebook_title}}}\n    />\n    if(!this.state.submitted) {\n      redirect = null;\n    }\n\nreturn(\n  <div>\n    {redirect}\n    <div className={classes.Title}>\n      <h1>Note</h1>\n    </div>\n\n    <div className=\"Content\">\n      <form className=\"Form\">\n        <div className=\"InputGroup\">\n          <input\n            className=\"Input\"\n            type=\"text\"\n            id=\"title\"\n            onChange={this.handleChange}\n            value={this.state.noteForm.title.value}\n            required />\n          <label className=\"Label\" htmlFor=\"title.value\">Title</label>\n        </div>\n\n        <div className=\"Error\">\n          <p>{this.state.errors.title}</p>\n        </div>\n\n\n        <div className=\"InputGroup\">\n          <textarea\n            className=\"Textarea\"\n            id=\"description\"\n            name=\"description\"\n            onChange={this.handleChange}\n            cols=\"30\" rows=\"10\"\n            value={this.state.noteForm.description.value}\n            required></textarea>\n          <label className=\"Label\" htmlFor=\"description\">Description</label>\n        </div>\n\n        <button\n          className=\"Btn\"\n          onClick={this.handleSubmit}>Save</button>\n\n      </form>\n    </div>\n  </div>\n  );\n}\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    submitted: state.note\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNewNote: (title, description, notebook_id, token) => dispatch(actions.post(title, description, notebook_id, token)),\n    onUpdateNote: (id, title, description, notebook_id, token) => dispatch(actions.update(id, title, description, notebook_id, token))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport * as actions from '../../store/actions/index';\nimport * as validate from '../../validation';\n\nimport classes from '../../containers/Layout/Layout.module.css';\nimport '../../styles/form.css';\n\nclass NewNotebook extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      notebookForm: {\n        title: {\n          value: \"\",\n          errors: {\n            required: \"Notebook title is required\"\n          }\n        },\n        id: null\n      },\n      submitted: false,\n      errors: {\n        title: []\n      },\n      isValid: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n\n    if(this.props.location.state) {\n      let notebook = {\n        title: {\n          value: this.props.location.state.title,\n          errors: {\n            required: \"Notebook title is required\"\n          }\n        },\n        id: this.props.location.state.notebook_id,\n      }\n\n      this.setState({notebookForm: notebook})\n    }\n\n  }\n\n  validateForm() {\n    let form = this.state.notebookForm;\n    let errors;\n\n    errors = {\n      title: [],\n    };\n\n    if(validate.empty(form.title.value)) errors.title.push(form.title.errors.required)\n\n    let valid = true;\n    for(let prop in errors) {\n      if(errors[prop].length !== 0 && errors[prop][0] !== undefined) {\n        valid = false;\n      }\n    }\n\n    this.setState({isValid: valid})\n    this.setState({errors: errors});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    this.validateForm();\n\n    if(this.state.isValid) {\n      if(!this.state.notebookForm.id) {\n        this.props.onNewNotebook(this.state.notebookForm.title.value,\n          this.props.token);\n      } else {\n        this.props.onUpdateNotebook(this.state.notebookForm.id,\n          this.state.notebookForm.title.value,\n          this.props.token);\n      }\n      if(this.props.submitted) {\n        this.setState({submitted: true});\n      }\n    }\n  }\n\n  handleChange(event) {\n    let key = event.target.id;\n    let form = {...this.state.notebookForm};\n\n    form[key].value = event.target.value;\n\n    this.setState({notebookForm: form});\n  }\n\n  render() {\n    let redirect = <Redirect to=\"/\" />\n    if(!this.state.submitted) {\n      redirect = null;\n    }\n\n    return(\n      <div>\n        {redirect}\n        <div className={classes.Title}>\n          <h1>Notebook</h1>\n        </div>\n\n        <div className=\"Content\">\n          <form className=\"Form\">\n            <div className=\"InputGroup\">\n              <input\n                className=\"Input\"\n                type=\"text\"\n                id=\"title\"\n                onChange={this.handleChange}\n                value={this.state.notebookForm.title.value}\n                required />\n              <label className=\"Label\" htmlFor=\"title\">Title</label>\n            </div>\n\n            <div className=\"Error\">\n              <p>{this.state.errors.title}</p>\n            </div>\n\n\n            <button\n              className=\"Btn\"\n              onClick={this.handleSubmit}>Save</button>\n\n          </form>\n        </div>\n      </div>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    token: state.auth.token,\n    submitted: state.notebook.submitted\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onNewNotebook: (title, token) => dispatch(actions.notebookPost(title, token)),\n    onUpdateNotebook: (id, title, token) => dispatch(actions.notebookUpdate(id, title, token)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewNotebook);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\nimport Auth from '../Auth/Auth';\nimport Logout from '../Auth/Logout/Logout';\nimport Navbar from '../../components/Navbar/Navbar';\nimport Home from '../../components/Home/Home';\nimport Note from '../Notes/Note';\nimport Notebook from '../Notebooks/Notebook';\nimport NewNote from '../Notes/New';\nimport NewNotebook from '../Notebooks/New';\n\nimport classes from './Layout.module.css';\n\nclass Layout extends Component {\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n  render() {\n    let view = (\n      <div>\n        <Route path=\"/\" exact render={()=> <Auth form=\"login\" />} />\n        <Route path=\"/signup\" exact render={()=> <Auth form=\"signup\" />} />\n      </div>\n    );\n\n    if(this.props.isAuthenticated) {\n      view = (\n        <div className={classes.Container}>\n          <div className={classes.Navbar}>\n            <Navbar />\n          </div>\n\n          <main className={classes.MainContent}>\n            <Switch>\n              <Route path=\"/note/:id/edit\" exact component={NewNote} />\n              <Route path=\"/note/new\" exact component={NewNote} />\n              <Route path=\"/notebook/:id/edit\" exact component={NewNotebook} />\n              <Route path=\"/notebook/new\" exact component={NewNotebook} />\n              <Route path=\"/note/:id\" exact component={Note} />\n              <Route path=\"/notebook/:id\" exact component={Notebook} />\n              <Route path=\"/logout\" exact component={Logout} />\n              <Route path=\"/\" exact component={Home} />\n            </Switch>\n          </main>\n        </div>\n      );\n    }\n\n    return (\n      <BrowserRouter>\n        {view}\n      </BrowserRouter>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n        isAuthenticated: state.auth.token !== null\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout);\n","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Layout from './containers/Layout/Layout';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n      <Layout />\n    </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties\n  };\n};\n","import { updateObject } from '../utility';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  token: null,\n  error: null,\n  loading: false\n};\n\nconst authStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst authSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    error: null,\n    loading: false\n  });\n};\n\nconst authFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst authLogout = (state, action) => {\n  return updateObject(state, {token: null})\n};\n\nconst signupStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst signupSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: false\n  });\n};\n\nconst signupFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n    case actionTypes.AUTH_START: return authStart(state, action);\n    case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n    case actionTypes.AUTH_FAIL: return authFail(state, action);\n    case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n    case actionTypes.SIGNUP_START: return signupStart(state, action);\n    case actionTypes.SIGNUP_SUCCESS: return signupSuccess(state, action);\n    case actionTypes.SIGNUP_FAIL: return signupFail(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { updateObject } from '../utility';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  notebooks: [],\n  error: null,\n};\n\nconst notebooksStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst notebooksSuccess = (state, action) => {\n  return updateObject(state, {\n    notebooks: action.notebooks,\n    error: null,\n  });\n};\n\nconst notebooksFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false\n    });\n  };\n\n  const reducer = (state = initialState, action) => {\n    switch(action.type) {\n      case actionTypes.FETCH_NOTEBOOKS_START: return notebooksStart(state, action);\n      case actionTypes.FETCH_NOTEBOOKS_SUCCESS: return notebooksSuccess(state, action);\n      case actionTypes.FETCH_NOTEBOOKS_FAIL: return notebooksFail(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { updateObject } from '../utility';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  notes: [],\n  error: null,\n};\n\nconst notebookStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst notebookSuccess = (state, action) => {\n  return updateObject(state, {\n    notes: action.notebook,\n    error: null,\n  });\n};\n\nconst notebookFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false\n    });\n  };\n\nconst postNotebookStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst postNotebookSuccess = (state, action) => {\n  return updateObject(state, {\n    notebook: action.notebook,\n    error: null,\n    submitted: true\n  });\n};\n\nconst postNotebookFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false,\n    });\n  };\n\nconst updateNotebookStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst updateNotebookSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    submitted: true\n  });\n};\n\nconst updateNotebookFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false\n    });\n  };\n\nconst removeNotebookStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst removeNotebookSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    submitted: true\n  });\n};\n\nconst removeNotebookFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false\n    });\n  };\n\n  const reducer = (state = initialState, action) => {\n    switch(action.type) {\n      case actionTypes.FETCH_NOTEBOOK_START: return notebookStart(state, action);\n      case actionTypes.FETCH_NOTEBOOK_SUCCESS: return notebookSuccess(state, action);\n      case actionTypes.FETCH_NOTEBOOK_FAIL: return notebookFail(state, action);\n\n      case actionTypes.POST_NOTEBOOK_START: return postNotebookStart(state, action);\n      case actionTypes.POST_NOTEBOOK_SUCCESS: return postNotebookSuccess(state, action);\n      case actionTypes.POST_NOTEBOOK_FAIL: return postNotebookFail(state, action);\n\n      case actionTypes.UPDATE_NOTEBOOK_START: return updateNotebookStart(state, action);\n      case actionTypes.UPDATE_NOTEBOOK_SUCCESS: return updateNotebookSuccess(state, action);\n      case actionTypes.UPDATE_NOTEBOOK_FAIL: return updateNotebookFail(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import { updateObject } from '../utility';\nimport * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  note: null,\n  error: null,\n};\n\nconst noteStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst noteSuccess = (state, action) => {\n  return updateObject(state, {\n    note: action.note,\n    error: null,\n  });\n};\n\nconst noteFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false\n    });\n  };\n\nconst postNoteStart = (state, action) => {\n  return updateObject(state, {\n        error: null, loading: true,\n  });\n};\n\nconst postNoteSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    submitted: true\n  });\n};\n\nconst postNoteFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false,\n      submitted: false\n    });\n  };\n\nconst updateNoteStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst updateNoteSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    submitted: true\n  });\n};\n\nconst updateNoteFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false\n    });\n  };\n\nconst removeNoteStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true  });\n};\n\nconst removeNoteSuccess = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    submitted: true\n  });\n};\n\nconst removeNoteFail = (state, action) => {\n  return updateObject(state, {\n      error: action.error,\n      loading: false\n    });\n  };\n\n  const reducer = (state = initialState, action) => {\n    switch(action.type) {\n      case actionTypes.FETCH_NOTE_START: return noteStart(state, action);\n      case actionTypes.FETCH_NOTE_SUCCESS: return noteSuccess(state, action);\n      case actionTypes.FETCH_NOTE_FAIL: return noteFail(state, action);\n\n      case actionTypes.POST_NOTE_START: return postNoteStart(state, action);\n      case actionTypes.POST_NOTE_SUCCESS: return postNoteSuccess(state, action);\n      case actionTypes.POST_NOTE_FAIL: return postNoteFail(state, action);\n\n      case actionTypes.UPDATE_NOTE_START: return updateNoteStart(state, action);\n      case actionTypes.UPDATE_NOTE_SUCCESS: return updateNoteSuccess(state, action);\n      case actionTypes.UPDATE_NOTE_FAIL: return updateNoteFail(state, action);\n\n      case actionTypes.REMOVE_NOTE_START: return removeNoteStart(state, action);\n      case actionTypes.REMOVE_NOTE_SUCCESS: return removeNoteSuccess(state, action);\n      case actionTypes.REMOVE_NOTE_FAIL: return removeNoteFail(state, action);\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/destyle.css/destyle.css';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport authReducer from './store/reducers/auth';\nimport notebooksReducer from './store/reducers/notebooks';\nimport notebookReducer from './store/reducers/notebook';\nimport noteReducer from './store/reducers/note';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  notebooks: notebooksReducer,\n  notebook: notebookReducer,\n  note: noteReducer,\n});\n\nconst store = createStore(rootReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}